{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import gc\n",
    "import time\n",
    "import datetime\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "\n",
    "#os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n",
    "\n",
    "epochs = 10\n",
    "batch_size = 4\n",
    "learning_rate = 0.01\n",
    "workers = 4 # The number of parallel processes used to read data\n",
    "gpu_id = [0,1,2,3] # only modify if you machine has more than one GPU card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "torch.cuda.device_count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### Dataset [10 points]\n",
    "We are going to use the [PASCAL VOC dataset](https://drive.google.com/drive/folders/1G54WDNnOQecr5T0sEvZcuyme0WT5Qje3?usp=sharing), which is a commonly used benchmark. In order to reduce the\n",
    "computational requirements, you should downsample the dataset to 256x256, similar to the previous project."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# Part 2\n",
    "\n",
    "## Semantic Segmentation\n",
    "\n",
    "In this part of the project, you will reuse the model you created in the previous part to perform Semantic Segmentation - instead of assigning a real number to each\n",
    "pixel , you will assign it a class.\n",
    "\n",
    "The tasks are as following:\n",
    "- Write a Dataset class that processes the segmentation data. **[10 points]**\n",
    "    - Modify the UNet model that takes an RGB image and now outputs a single channel _label map_\n",
    "    - Define an approprate loss function. **[5 points]**\n",
    "- Tune the model to achieve an mIOU of **0.45** or higher on the given validation set. **[20 points]**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "Now you have to implement the Dataset. Look at the file `loaders.py`.\n",
    "\n",
    "The class you will need to emulate is `class ImageDepthDataset(Dataset)`. The class is called `VOCSeg`, and it must _inherit_ from the `Dataset` class,\n",
    "just like the `ImageDepthDataset`.\n",
    "You need to fill in the `__len__` and the `__getitem__` methods.\n",
    "The `__getitem__` method should yield a dict of the RGB image and the labeled segmentation map.\n",
    "\n",
    "Make sure you downsample the image and the labels to 256x256, otherwise the training will take too much time.\n",
    "\n",
    "Make sure that the labels are in the range `0..N-1`, where\n",
    "N is the number of classes - 21 in our case. You can have one special label for unknown regions.\n",
    "\n",
    "We provide the map of RGB to label for convenience in `get_pascal_labels()`. The map should be read as this - if a pixel has color `[0, 0, 0]`, it has label 0. If the color is\n",
    "`[128, 0, 0]`, the label is 1\n",
    "\n",
    "It is also very common to change the RGB range from 0-255 to 0-1 or -1 to 1. Take a look at [torchvision.transforms.ToTensor](https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.ToTensor)\n",
    "and [torchvision.transforms.Normalize](https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.Normalize)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "The PASCAL VOC dataset has predefined train/val sets. Make sure your class implementation can take this _split_ as an argument. Now create train/val loaders using the `get_seg_loaders` function (look at `prep_loaders`), and we should be good to go."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I transfer the loader to here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "%pylab inline\n",
    "import torchvision\n",
    "import torch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import glob\n",
    "import torch\n",
    "import numpy as np\n",
    "from skimage import io, transform\n",
    "from torchvision import transforms\n",
    "from torchvision.utils import make_grid\n",
    "from torch.utils.data import Dataset, DataLoader, random_split\n",
    "\n",
    "np.random.seed(0) \n",
    "torch.manual_seed(0)\n",
    "VALIDATION_SPLIT = 0.02\n",
    "\n",
    "class DepthHalfSize(object):\n",
    "    def __call__(self, sample):\n",
    "        x = sample['depth']\n",
    "        sample['depth'] = transform.resize(x, (x.shape[0]//2, x.shape[1]//2))\n",
    "        return sample\n",
    "\n",
    "class ToTensor(object):\n",
    "    def __call__(self, sample):\n",
    "        image, depth = sample['image'], sample['depth']\n",
    "        # swap channel axis\n",
    "        image = image.transpose((2, 0, 1))\n",
    "        depth = depth.transpose((2, 0, 1))\n",
    "        return {'image': torch.from_numpy(image), 'depth': torch.from_numpy(depth)}\n",
    "    \n",
    "class DepthToNormal(object):\n",
    "    def __call__(self, sample):\n",
    "        dx, dy = np.gradient(sample['depth'].squeeze())\n",
    "        dx, dy, dz = dx * 2500, dy * 2500, np.ones_like(dy)\n",
    "        n = np.linalg.norm(np.stack((dy, dx, dz), axis=-1), axis=-1)\n",
    "        d = np.stack((dy/n, dx/n, dz/n), axis=-1)\n",
    "        return {'image': sample['image'], 'depth': (d + 1) * 0.5} \n",
    "        \n",
    "class ImageDepthDataset(Dataset):\n",
    "    def __init__(self, root_dir, transform=None):\n",
    "        self.transform = transform \n",
    "        self.image_files = glob.glob(root_dir + '/*.jpg')\n",
    "        \n",
    "    def __len__(self):\n",
    "        return len(self.image_files)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        image = io.imread(self.image_files[idx]) / 255.0\n",
    "        depth = io.imread(self.image_files[idx].replace('.jpg', '.png'))[:,:,:1] / 255.0        \n",
    "        sample = {'image': image, 'depth': depth}        \n",
    "        return self.transform(sample) if self.transform else sample\n",
    "    \n",
    "def prep_loaders(root_dir=None, batch_size=1, workers=1):\n",
    "    # Load dataset\n",
    "    image_depth_dataset = ImageDepthDataset(root_dir=root_dir, transform=transforms.Compose([DepthHalfSize(), ToTensor()]))\n",
    "\n",
    "    # Split into training and validation sets\n",
    "    train_size = int((1-VALIDATION_SPLIT) * len(image_depth_dataset))\n",
    "    test_size = len(image_depth_dataset) - train_size\n",
    "    train_dataset, test_dataset = torch.utils.data.random_split(image_depth_dataset, [train_size, test_size])\n",
    "\n",
    "    # Prepare data loaders\n",
    "    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=workers)\n",
    "    valid_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=workers)\n",
    "    print('Dataset size (num. batches)', len(train_loader), len(valid_loader))\n",
    "    \n",
    "    return train_loader, valid_loader\n",
    "\n",
    "##############################################################\n",
    "################# Segmentation Section #######################\n",
    "##############################################################\n",
    "\n",
    "class SegIdentityTransform(object):\n",
    "    # Hint: Note that our transforms work on dicts. This is an example of a transform that works\n",
    "    # on a dict whose elements can be converted to np.arrays, and are then converted to torch.tensors\n",
    "    # This performs the scaling of the RGB by division by 255, and puts channels first by performing the permute\n",
    "    # for the label, we convert to long, datatype to let torch know that this is a discrete label.\n",
    "    # You might want to change this or write different transforms depending on how you read data.\n",
    "    def __call__(self, sample):\n",
    "        x = sample['image']\n",
    "        sample['image'] = transform.resize(x, (256,256),preserve_range=True)\n",
    "        y= sample['label']\n",
    "        sample['label'] = transform.resize(y, (256,256),preserve_range=True)\n",
    "        \n",
    "        tf = transforms.Compose([transforms.ToTensor(),\n",
    "                transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),])\n",
    "        \n",
    "        \n",
    "        #sample['image'] = sample['image']/255.0\n",
    "        #sample['image'] = tf(sample['image'])\n",
    "        \n",
    "        \n",
    "        return {'image': torch.tensor(np.array(sample['image']/255.0)).permute(2,0,1),\n",
    "        #return {'image': torch.tensor(np.array(sample['image']/255.0)),\n",
    "                'label': torch.tensor(np.array(sample['label'])).long()}\n",
    "        #return sample\n",
    "\n",
    "def get_pascal_labels():\n",
    "    \"\"\"Load the mapping that associates pascal classes with label colors\n",
    "    Returns:\n",
    "        np.ndarray with dimensions (21, 3)\n",
    "    \"\"\"\n",
    "    return np.asarray([[0, 0, 0],\n",
    "                       [128, 0, 0],\n",
    "                       [0, 128, 0],\n",
    "                       [128, 128, 0],\n",
    "                       [0, 0, 128],\n",
    "                       [128, 0, 128],\n",
    "                       [0, 128, 128],\n",
    "                       [128, 128, 128],\n",
    "                       [64, 0, 0],\n",
    "                       [192, 0, 0],\n",
    "                       [64, 128, 0],\n",
    "                       [192, 128, 0],\n",
    "                       [64, 0, 128],\n",
    "                       [192, 0, 128],\n",
    "                       [64, 128, 128],\n",
    "                       [192, 128, 128],\n",
    "                       [0, 64, 0],\n",
    "                       [128, 64, 0],\n",
    "                       [0, 192, 0],\n",
    "                       [128, 192, 0],\n",
    "                       [0, 64, 128]])\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def encode_segmap(mask):\n",
    "    \"\"\"Encode segmentation label images as pascal classes\n",
    "    Args:\n",
    "        mask (np.ndarray): raw segmentation label image of dimension\n",
    "          (M, N, 3), in which the Pascal classes are encoded as colours.\n",
    "    Returns:\n",
    "        (np.ndarray): class map with dimensions (M,N), where the value at\n",
    "        a given location is the integer denoting the class index.\n",
    "    \"\"\"\n",
    "\n",
    "    # TODO (hint: You might not need a lot of work here with some libraries, which already read in the image as a single channel label)\n",
    "    # (hint: the said library does not return a np.ndarray object)\n",
    "    label_mask = np.zeros((mask.shape[0], mask.shape[1]), dtype=np.int16)\n",
    "    if isinstance(mask, np.ndarray):\n",
    "        # TODO\n",
    "        mask = mask.astype(int)\n",
    "        for i, label in enumerate(get_pascal_labels()):\n",
    "            #print(mask.shape)\n",
    "            #print(i)\n",
    "            #print(np.where(np.all(mask == label, axis=-1)))\n",
    "            label_mask[np.where(np.all(mask == label, axis=-1))[:2]] = i\n",
    "        label_mask = label_mask.astype(int)\n",
    "    else:\n",
    "        # TODO if the image is just single channel\n",
    "        #  you might want to convert the single channel label to a np.ndarray\n",
    "        pass\n",
    "    return label_mask\n",
    "\n",
    "def decode_segmap(label_mask, unk_label=255):\n",
    "    \"\"\"Decode segmentation label prediction as RGB images\n",
    "    Args:\n",
    "        mask (torch.tensor): class map with dimensions (B, M,N), where the value at\n",
    "        a given location is the integer denoting the class index.\n",
    "    Returns:\n",
    "        (np.ndarray): colored image of shape (BM, BN, 3)\n",
    "    \"\"\"\n",
    "    #mask[mask == unk_label] == 0\n",
    "    #mask = mask.numpy()\n",
    "    #cmap = get_pascal_labels()\n",
    "    #cmap_exp = cmap[..., None]\n",
    "    #colored = cmap[mask].squeeze()\n",
    "    #grid = make_grid(torch.tensor(colored).permute(0, 3, 1, 2))\n",
    "    #return np.permute(grid, (1, 2, 0))\n",
    "\n",
    "    label_colours = get_pascal_labels()\n",
    "    r = label_mask.copy()\n",
    "    g = label_mask.copy()\n",
    "    b = label_mask.copy()\n",
    "    for ll in range(0, 21):\n",
    "        r[label_mask == ll] = label_colours[ll, 0]\n",
    "        g[label_mask == ll] = label_colours[ll, 1]\n",
    "        b[label_mask == ll] = label_colours[ll, 2]\n",
    "    rgb = np.zeros((label_mask.shape[0], label_mask.shape[1], 3))\n",
    "    print(rgb.shape)\n",
    "    print(r.shape)\n",
    "    rgb[:, :, 0] = r / 255.0\n",
    "    rgb[:, :, 1] = g / 255.0\n",
    "    rgb[:, :, 2] = b / 255.0\n",
    "    plt.imshow(rgb)\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "\n",
    "class VOCSeg(Dataset):\n",
    "    def __init__(self, root_dir, split=None, transform=None):\n",
    "        # Known information\n",
    "        self.num_classes = 21\n",
    "        self.class_names = ['Background',\n",
    "                            'Aeroplane',\n",
    "                            'Bicycle',\n",
    "                            'Bird',\n",
    "                            'Boat',\n",
    "                            'Bottle',\n",
    "                            'Bus',\n",
    "                            'Car',\n",
    "                            'Cat',\n",
    "                            'Chair',\n",
    "                            'Cow',\n",
    "                            'Diningtable',\n",
    "                            'Dog',\n",
    "                            'Horse',\n",
    "                            'Motorbike',\n",
    "                            'Person',\n",
    "                            'Pottedplant',\n",
    "                            'Sheep',\n",
    "                            'Sofa',\n",
    "                            'Train',\n",
    "                            'Tvmonitor']\n",
    "\n",
    "        # Set up proper paths\n",
    "        self.root_dir = root_dir\n",
    "        self.image_dir = os.path.join(self.root_dir, 'JPEGImages')\n",
    "        self.label_dir = os.path.join(self.root_dir, 'SegmentationClass')\n",
    "        \n",
    "        self.transform = transform \n",
    "\n",
    "        #TODO Read the appropriate split file and save the file names\n",
    "        self.split = split\n",
    "        self.split_file_dir = os.path.join(self.root_dir, 'ImageSets', 'Segmentation')\n",
    "\n",
    "        # TODO read in ONLY files from self.split_file\n",
    "        #self.image_files = None\n",
    "        #self.label_files = None\n",
    "        with open(os.path.join(os.path.join(self.split_file_dir, self.split + '.txt')), \"r\") as f:\n",
    "            lines = f.read().splitlines()\n",
    "            self.image_files = [os.path.join(self.root_dir, \"JPEGImages\", name + \".jpg\") for name in lines]\n",
    "            self.label_files = [os.path.join(self.root_dir, \"SegmentationClass\", name + \".png\") for name in lines]\n",
    "            print(len(self.image_files))\n",
    "            \n",
    "        \n",
    "\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.image_files)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "\n",
    "        # TODO Retrieve the saved file names and perform the proper processing\n",
    "        # The images go from 0-255 to 0-1. You can also use the range -1 to 1\n",
    "        # The labels go from a 3 channel RGB to a single channel with elements in the range 0..N-1\n",
    "        #image = None\n",
    "        image = io.imread(self.image_files[idx])\n",
    "        #label_rgb = None\n",
    "        label_rgb = io.imread(self.label_files[idx])\n",
    "        label = label_rgb[:,:,:3]\n",
    "        label = encode_segmap(label) # write the encode_segmap function\n",
    "        sample = {'image': image, 'label': label}\n",
    "        \n",
    "        return self.transform(sample)\n",
    "\n",
    "\n",
    "def get_seg_loaders(root_dir=None, batch_size=1, workers=1):\n",
    "\n",
    "    #TODO optionally add more augmentation\n",
    "    ####Please see function SegIdentityTransform \n",
    "    \n",
    "    tfms = transforms.Compose([\n",
    "        #transforms.Resize(256),\n",
    "        #transforms.Normalize(mean = [0.485, 0.456, 0.406],std = [0.229, 0.224, 0.225]),\n",
    "        SegIdentityTransform()\n",
    "    ])\n",
    "\n",
    "    train_set = VOCSeg(root_dir=root_dir, split='train', transform=tfms)\n",
    "    val_set = VOCSeg(root_dir=root_dir, split='val', transform=tfms) # No transforms on the validation set\n",
    "\n",
    "    # Prepare data_loaders\n",
    "    train_loader = DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=workers)\n",
    "    valid_loader = DataLoader(val_set, batch_size=batch_size, shuffle=False, num_workers=workers)\n",
    "\n",
    "    return train_loader, valid_loader\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1464\n",
      "1449\n"
     ]
    }
   ],
   "source": [
    "# Sanity check\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    #from loaders import get_seg_loaders\n",
    "    train_loader, valid_loader = get_seg_loaders(root_dir='./VOC2012',batch_size=batch_size,workers=workers)\n",
    "\n",
    "    # we have read all files\n",
    "    assert len(train_loader.dataset) == 1464\n",
    "    assert len(valid_loader.dataset) == 1449\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(15)\n",
      "tensor(1., dtype=torch.float64)\n",
      "torch.Size([4, 256, 256])\n",
      "torch.Size([4, 3, 256, 256])\n",
      "tensor([[[[0.1661, 0.1622, 0.1596,  ..., 0.1683, 0.1691, 0.1711],\n",
      "          [0.1789, 0.1724, 0.1663,  ..., 0.1682, 0.1709, 0.1725],\n",
      "          [0.1837, 0.1804, 0.1771,  ..., 0.1686, 0.1686, 0.1686],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0118],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0118, 0.0157],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0118, 0.0157]],\n",
      "\n",
      "         [[0.1864, 0.1787, 0.1756,  ..., 0.1690, 0.1656, 0.1672],\n",
      "          [0.1836, 0.1760, 0.1688,  ..., 0.1718, 0.1686, 0.1686],\n",
      "          [0.1730, 0.1699, 0.1647,  ..., 0.1765, 0.1643, 0.1608],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0039, 0.0039, 0.0039],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078]],\n",
      "\n",
      "         [[0.1871, 0.1974, 0.1922,  ..., 0.2153, 0.1880, 0.1895],\n",
      "          [0.1901, 0.1933, 0.1864,  ..., 0.2125, 0.2082, 0.2082],\n",
      "          [0.1909, 0.1873, 0.1839,  ..., 0.2066, 0.2124, 0.2124],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0118, 0.0097],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0157, 0.0136],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0157, 0.0136]]],\n",
      "\n",
      "\n",
      "        [[[0.0389, 0.0226, 0.0235,  ..., 0.0994, 0.1264, 0.1469],\n",
      "          [0.0263, 0.0142, 0.0154,  ..., 0.2712, 0.3047, 0.1920],\n",
      "          [0.0242, 0.0193, 0.0163,  ..., 0.3089, 0.3215, 0.2012],\n",
      "          ...,\n",
      "          [0.0664, 0.0638, 0.0732,  ..., 0.2165, 0.3307, 0.4656],\n",
      "          [0.0692, 0.0679, 0.0723,  ..., 0.3420, 0.3357, 0.3429],\n",
      "          [0.0706, 0.0706, 0.0706,  ..., 0.3205, 0.3314, 0.3503]],\n",
      "\n",
      "         [[0.0428, 0.0265, 0.0275,  ..., 0.1083, 0.1316, 0.1462],\n",
      "          [0.0288, 0.0181, 0.0193,  ..., 0.2663, 0.2899, 0.1654],\n",
      "          [0.0242, 0.0193, 0.0202,  ..., 0.3060, 0.3077, 0.1734],\n",
      "          ...,\n",
      "          [0.0585, 0.0560, 0.0654,  ..., 0.2056, 0.3579, 0.4841],\n",
      "          [0.0613, 0.0600, 0.0644,  ..., 0.3702, 0.3556, 0.3398],\n",
      "          [0.0627, 0.0627, 0.0627,  ..., 0.3413, 0.3400, 0.3441]],\n",
      "\n",
      "         [[0.0216, 0.0039, 0.0054,  ..., 0.1102, 0.1249, 0.1360],\n",
      "          [0.0147, 0.0012, 0.0017,  ..., 0.2451, 0.2688, 0.1537],\n",
      "          [0.0164, 0.0114, 0.0069,  ..., 0.2609, 0.2805, 0.1617],\n",
      "          ...,\n",
      "          [0.0703, 0.0678, 0.0772,  ..., 0.2967, 0.5410, 0.6794],\n",
      "          [0.0731, 0.0718, 0.0762,  ..., 0.5927, 0.6511, 0.6647],\n",
      "          [0.0745, 0.0745, 0.0745,  ..., 0.6861, 0.6628, 0.6579]]],\n",
      "\n",
      "\n",
      "        [[[0.0021, 0.0068, 0.0131,  ..., 0.2081, 0.1912, 0.1887],\n",
      "          [0.0036, 0.0075, 0.0078,  ..., 0.2377, 0.2183, 0.2064],\n",
      "          [0.0095, 0.0094, 0.0070,  ..., 0.2470, 0.2350, 0.2055],\n",
      "          ...,\n",
      "          [0.2200, 0.2070, 0.1956,  ..., 0.3062, 0.2536, 0.1941],\n",
      "          [0.2187, 0.2105, 0.1941,  ..., 0.3845, 0.2911, 0.2027],\n",
      "          [0.2178, 0.2099, 0.1862,  ..., 0.3045, 0.2234, 0.1914]],\n",
      "\n",
      "         [[0.0874, 0.1201, 0.1505,  ..., 0.3074, 0.3034, 0.3025],\n",
      "          [0.0984, 0.1242, 0.1396,  ..., 0.3167, 0.3174, 0.3089],\n",
      "          [0.1264, 0.1352, 0.1429,  ..., 0.3239, 0.3307, 0.3135],\n",
      "          ...,\n",
      "          [0.4468, 0.4607, 0.4614,  ..., 0.4901, 0.4469, 0.3864],\n",
      "          [0.4329, 0.4456, 0.4435,  ..., 0.5995, 0.5415, 0.4265],\n",
      "          [0.4354, 0.4367, 0.4252,  ..., 0.5464, 0.4825, 0.4181]],\n",
      "\n",
      "         [[0.0119, 0.0282, 0.0372,  ..., 0.1933, 0.1858, 0.1798],\n",
      "          [0.0151, 0.0187, 0.0188,  ..., 0.2099, 0.2014, 0.1865],\n",
      "          [0.0302, 0.0163, 0.0093,  ..., 0.2242, 0.2347, 0.2064],\n",
      "          ...,\n",
      "          [0.2896, 0.2977, 0.2705,  ..., 0.4207, 0.2955, 0.1833],\n",
      "          [0.2778, 0.2842, 0.2619,  ..., 0.5327, 0.4119, 0.2501],\n",
      "          [0.2814, 0.2826, 0.2516,  ..., 0.4550, 0.3470, 0.2488]]],\n",
      "\n",
      "\n",
      "        [[[0.1583, 0.3253, 0.5239,  ..., 0.0632, 0.0874, 0.0526],\n",
      "          [0.1676, 0.2996, 0.5101,  ..., 0.0561, 0.0365, 0.0318],\n",
      "          [0.1627, 0.2515, 0.1596,  ..., 0.1816, 0.0957, 0.0588],\n",
      "          ...,\n",
      "          [0.1498, 0.2991, 0.3380,  ..., 0.1216, 0.1191, 0.1268],\n",
      "          [0.1645, 0.1573, 0.2537,  ..., 0.1267, 0.1243, 0.1281],\n",
      "          [0.2899, 0.1965, 0.1669,  ..., 0.1233, 0.1208, 0.1250]],\n",
      "\n",
      "         [[0.2173, 0.3508, 0.5623,  ..., 0.1376, 0.1406, 0.0794],\n",
      "          [0.1699, 0.3056, 0.5634,  ..., 0.1803, 0.1067, 0.0652],\n",
      "          [0.2085, 0.2670, 0.1988,  ..., 0.2853, 0.1514, 0.0842],\n",
      "          ...,\n",
      "          [0.2049, 0.3414, 0.3709,  ..., 0.1608, 0.1583, 0.1660],\n",
      "          [0.2139, 0.1841, 0.2717,  ..., 0.1659, 0.1635, 0.1673],\n",
      "          [0.3456, 0.2352, 0.2008,  ..., 0.1595, 0.1540, 0.1597]],\n",
      "\n",
      "         [[0.1966, 0.3691, 0.5718,  ..., 0.0327, 0.0625, 0.0457],\n",
      "          [0.1865, 0.3207, 0.5549,  ..., 0.0130, 0.0098, 0.0258],\n",
      "          [0.2160, 0.2767, 0.2135,  ..., 0.0704, 0.0337, 0.0288],\n",
      "          ...,\n",
      "          [0.2719, 0.4019, 0.4170,  ..., 0.2054, 0.1979, 0.2052],\n",
      "          [0.2613, 0.2444, 0.3401,  ..., 0.2052, 0.2027, 0.2065],\n",
      "          [0.3717, 0.2848, 0.2708,  ..., 0.2006, 0.1962, 0.1988]]]],\n",
      "       dtype=torch.float64)\n",
      "tensor([[[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11],\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11],\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]]])\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample = iter(train_loader).next()\n",
    "figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['image'], padding=0).permute((1, 2, 0)))\n",
    "#figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['label'], padding=0).permute((1, 2, 0)))\n",
    "label = sample['label']\n",
    "image = sample['image']\n",
    "print(label.max())\n",
    "print(image.max())\n",
    "print(label.shape)\n",
    "print(image.shape)\n",
    "print(image)\n",
    "print(label)\n",
    "    \n",
    "    #print(image)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "You should implement a few more sanity checks - the range of data in the RGB part, the range of data in the label part, whether the dataset returns tensors,\n",
    "whether the labels have the datatype `torch.long` etc."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Modifying the Loss and Architecture [5 points]\n",
    "You will have to some form of surgery on the network you constructed in Part 1.\n",
    "\n",
    "1. The number of channels the last layer predicts must change to the number of classes in the dataset.\n",
    "2. The loss function must change to reflect the fact that we are now performing per-pixel classification. (What loss did you use for classification in Project 1?)\n",
    "3. You might get a CUDA assert error. This means that you have a label higher than the number of channels in the _logits_. This is very common with semantic segmentation, where you might want to label some region unkown as it's label might be under doubt - for example near the edges of objects. Look up how to ignore a certain label with a classification loss.\n",
    "4. Take care of input label and logit sizes. We want predictions to be 256x256 as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "from math import exp\n",
    "import torch.nn.functional as F\n",
    "from torch.autograd import Variable\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#### Cross Entropy\n",
    "def loss_fn(y_pred, y):\n",
    "    y_pred.requires_grad = True\n",
    "    y_pred = torch.sigmoid(y_pred)\n",
    "    loss = nn.CrossEntropyLoss(ignore_index=0)(y_pred, y)\n",
    "    return loss\n",
    "\n",
    "####Dice Loss\n",
    "def loss_fn(y_pred, y):\n",
    "    \n",
    "    #y_pred = Variable(y_pred, requires_grad=True)\n",
    "    #y_pred.requires_grad = True\n",
    "    #print(y_pred.shape)\n",
    "    y_pred = torch.sigmoid(y_pred)\n",
    "    y_pred = torch.argmax(y_pred, dim=1)\n",
    "    #y_pred = y_pred.argmax(1)\n",
    "    #print(y_pred.shape)\n",
    "    #bce = F.binary_cross_entropy_with_logits(y_pred, y)\n",
    "    \n",
    "    #pred = y_pred.view(-1)\n",
    "    #y = y.view(-1)\n",
    "    #y = torch.as_tensor(y)\n",
    "    #y_pred = torch.as_tensor(y_pred)\n",
    "    y = F.one_hot(y, num_classes = 21).contiguous().float()\n",
    "    y_pred   = F.one_hot(y_pred, num_classes = 21).contiguous().float()\n",
    "    \n",
    "    #y = Variable(y.float(), requires_grad=True)\n",
    "    #pred = Variable(pred.float(), requires_grad=True)\n",
    "    #y.requires_grad = True\n",
    "    y_pred.requires_grad = True\n",
    "    \n",
    "    #pred = pred.view(-1)\n",
    "    #y = y.view(-1)\n",
    "    y_pred = y_pred.squeeze(1)\n",
    "    y = y.squeeze(1)\n",
    "    \n",
    "    \n",
    "    smooth = 1.\n",
    "    intersection = (y_pred * y).sum()\n",
    "    loss =  1 - ((2. * intersection + smooth)/(y_pred.sum() + y.sum() + smooth))\n",
    "    #print(loss)\n",
    "    #return bce_loss(y_pred,y)\n",
    "    #return bce\n",
    "    return loss\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Up(nn.Module):\n",
    "\n",
    "    def __init__(self, in_channels, out_channels, down):\n",
    "        super().__init__()\n",
    "\n",
    "        self.up = nn.ConvTranspose2d(in_channels , in_channels // 2, kernel_size=2, stride=2)\n",
    "        if(down==1):\n",
    "            self.conv = Down(in_channels, out_channels,pooling=False)\n",
    "        else:\n",
    "            self.conv = Down2(in_channels, out_channels,pooling=False)\n",
    "\n",
    "    def forward(self, x1, x2):\n",
    "        x1 = self.up(x1)\n",
    "        diffY = x2.shape[2] - x1.shape[2]\n",
    "        diffX = x2.shape[3] - x1.shape[3]\n",
    "\n",
    "        x1 = F.pad(x1, [diffX // 2, diffX - diffX // 2,\n",
    "                        diffY // 2, diffY - diffY // 2]) \n",
    "\n",
    "        x = torch.cat([x2, x1], dim=1)\n",
    "        return self.conv(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Down(nn.Module):\n",
    "    def __init__(self, in_channels, out_channels,pooling=True):\n",
    "        super().__init__()\n",
    "        self.pooling = pooling\n",
    "        self.maxpool = nn.MaxPool2d(2)\n",
    "        self.double_conv = nn.Sequential(\n",
    "            nn.Conv2d(in_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True)\n",
    "        )\n",
    "\n",
    "    def forward(self, x):\n",
    "        if(self.pooling):\n",
    "            return self.maxpool(self.double_conv(x))\n",
    "        else:\n",
    "            return self.double_conv(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Down2(nn.Module):\n",
    "    def __init__(self, in_channels, out_channels,pooling=True):\n",
    "        super().__init__()\n",
    "        self.pooling = pooling\n",
    "        self.maxpool = nn.MaxPool2d(2)\n",
    "        self.double_conv = nn.Sequential(\n",
    "            nn.Conv2d(in_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True)\n",
    "        )\n",
    "\n",
    "    def forward(self, x):\n",
    "        if(self.pooling):\n",
    "            return self.maxpool(self.double_conv(x))\n",
    "        else:\n",
    "            return self.double_conv(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Model(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Model, self).__init__()\n",
    "        self.down1 = Down(3,64,pooling=False)\n",
    "        self.down2 = Down(64,128,pooling=True)\n",
    "        self.down3 = Down2(128,256,pooling=True)\n",
    "        self.down4 = Down2(256,512,pooling=True)\n",
    "        self.down5 = Down2(512,1024,pooling=True)\n",
    "\n",
    "        self.up1 = Up(1024,512,down=2)\n",
    "        self.up2 = Up(512, 256,down=2)\n",
    "        self.up3 = Up(256, 128,down=2)\n",
    "        self.up4 = Up(128, 64,down=1)\n",
    "        #self.maxpool = nn.MaxPool2d(2)\n",
    "        self.conv = nn.Conv2d(64, 21, kernel_size=1)\n",
    "\n",
    "\n",
    "    def forward(self, x):\n",
    "\n",
    "        x1 = self.down1(x)\n",
    "        x2 = self.down2(x1)\n",
    "        x3 = self.down3(x2)\n",
    "        x4 = self.down4(x3)\n",
    "        x5 = self.down5(x4)\n",
    "        x = self.up1(x5,x4)\n",
    "        x = self.up2(x, x3)\n",
    "        x = self.up3(x, x2)\n",
    "        x = self.up4(x, x1)\n",
    "        #x = self.maxpool(x)\n",
    "        x = self.conv(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### !! \n",
    "### <span style=\"color:red\"> At this point, we highly recommend restarting your notebook for part 2 and beginning modifying/training the  model</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import gc\n",
    "import time\n",
    "import datetime\n",
    "\n",
    "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n",
    "\n",
    "epochs = 30\n",
    "batch_size = 8\n",
    "learning_rate = 0.0001\n",
    "workers = 1 # The number of parallel processes used to read data\n",
    "gpu_id = [0] # only modify if you machine has more than one GPU card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1464\n",
      "1449\n"
     ]
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    #from loaders import get_seg_loaders\n",
    "    train_loader, valid_loader = get_seg_loaders(root_dir='./VOC2012',batch_size=batch_size,workers=workers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ready to train.\n"
     ]
    }
   ],
   "source": [
    "def create_model_gpu():\n",
    "    model = Model()\n",
    "    model = model.cuda()\n",
    "    model = nn.DataParallel(model, device_ids=[g for g in gpu_id])\n",
    "    return model\n",
    "\n",
    "model = create_model_gpu()\n",
    "print('Ready to train.')\n",
    "\n",
    "\n",
    "#for param in model.parameters():\n",
    "#    param.requires_grad = False"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Training and Evaluation [18 points]\n",
    "Tune the hyperparameters to get the maximum possible score on the PASCAL VOC challenge. \n",
    "And answer the following questions:\n",
    "1. What is the relationship between the _size_ of the class and the IOU How would you quantify this relationship?\n",
    "2. What is the relationship between the number of instances and the IOU? how many times a class exists in an image vs the IOU?\n",
    "3. The segmentation dataset is small. Initialize the weights of the segmentation net with the weights of the trained depth network.\n",
    "4. Which weights can you not transfer?\n",
    "5. Fine tune (ie train with a lower learning rate) the model in 3 for the same number of epochs as the model with a random initialization (or ImageNet initialized weights)\n",
    "6. What trend do you observe?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "from utils import Metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Training seg_model_gpu[0]_n30_bs8_lr0.0001\n",
      "\n",
      "Epoch: [0][0/183]\tTime 1.320 (1.320)\tETA 0:04:01\tTraining Loss 0.7542 (0.7542)\n",
      "\n",
      "Epoch: [0][18/183]\tTime 0.750 (15.421)\tETA 0:02:03\tTraining Loss 0.7673 (0.7792)\n",
      "\n",
      "Epoch: [0][36/183]\tTime 0.770 (29.460)\tETA 0:01:53\tTraining Loss 0.7766 (0.7825)\n",
      "\n",
      "Epoch: [0][54/183]\tTime 0.793 (43.821)\tETA 0:01:42\tTraining Loss 0.8022 (0.7822)\n",
      "\n",
      "Epoch: [0][72/183]\tTime 0.795 (57.855)\tETA 0:01:28\tTraining Loss 0.7709 (0.7840)\n",
      "\n",
      "Epoch: [0][90/183]\tTime 0.797 (71.995)\tETA 0:01:14\tTraining Loss 0.7917 (0.7877)\n",
      "\n",
      "Epoch: [0][108/183]\tTime 0.811 (86.060)\tETA 0:01:00\tTraining Loss 0.8342 (0.7882)\n",
      "\n",
      "Epoch: [0][126/183]\tTime 0.780 (100.198)\tETA 0:00:44\tTraining Loss 0.7612 (0.7885)\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-81-1c52a2debe5a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_loader\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    802\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    803\u001b[0m             \u001b[0;32massert\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_shutdown\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_tasks_outstanding\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 804\u001b[0;31m             \u001b[0midx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    805\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_tasks_outstanding\u001b[0m \u001b[0;34m-=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_get_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    769\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    770\u001b[0m             \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 771\u001b[0;31m                 \u001b[0msuccess\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_try_get_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    772\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0msuccess\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    773\u001b[0m                     \u001b[0;32mreturn\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_try_get_data\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    722\u001b[0m         \u001b[0;31m#   (bool: whether successfully get data, any: data if successful else None)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    723\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 724\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_data_queue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    725\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    726\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/multiprocessing/queues.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, block, timeout)\u001b[0m\n\u001b[1;32m    102\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    103\u001b[0m                     \u001b[0mtimeout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdeadline\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmonotonic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 104\u001b[0;31m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_poll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    105\u001b[0m                         \u001b[0;32mraise\u001b[0m \u001b[0mEmpty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    106\u001b[0m                 \u001b[0;32melif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_poll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/multiprocessing/connection.py\u001b[0m in \u001b[0;36mpoll\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    255\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_closed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    256\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_readable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 257\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_poll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    259\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__enter__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/multiprocessing/connection.py\u001b[0m in \u001b[0;36m_poll\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    412\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    413\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_poll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 414\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    415\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mbool\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    416\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/multiprocessing/connection.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(object_list, timeout)\u001b[0m\n\u001b[1;32m    918\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    919\u001b[0m             \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 920\u001b[0;31m                 \u001b[0mready\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mselector\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    921\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mready\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    922\u001b[0m                     \u001b[0;32mreturn\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfileobj\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mevents\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mready\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/selectors.py\u001b[0m in \u001b[0;36mselect\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    413\u001b[0m         \u001b[0mready\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    414\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 415\u001b[0;31m             \u001b[0mfd_event_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_selector\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpoll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    416\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mInterruptedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    417\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mready\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "run_id = 'seg_model_gpu{}_n{}_bs{}_lr{}'.format(gpu_id, epochs, batch_size, learning_rate); print('\\n\\nTraining', run_id)\n",
    "save_path = run_id + '.pkl'\n",
    "\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)\n",
    "#optimizer = torch.optim.Adam(filter(lambda p: p.requires_grad, model.parameters()), lr=learning_rate)\n",
    "\n",
    "metrics = Metrics(train_loader.dataset.num_classes, train_loader.dataset.class_names)\n",
    "\n",
    "# Used to keep track of statistics\n",
    "class AverageMeter(object):\n",
    "    def __init__(self):\n",
    "        self.val = 0; self.avg = 0; self.sum = 0; self.count = 0\n",
    "    def update(self, val, n=1):\n",
    "        self.val = val\n",
    "        self.sum += val * n\n",
    "        self.count += n\n",
    "        self.avg = self.sum / self.count\n",
    "\n",
    "REPORTS_PER_EPOCH = 10\n",
    "ITER_PER_EPOCH = len(train_loader)\n",
    "ITER_PER_REPORT = ITER_PER_EPOCH//REPORTS_PER_EPOCH\n",
    "\n",
    "\n",
    "\n",
    "for epoch in range(epochs):\n",
    "    model.train()\n",
    "\n",
    "    # Progress reporting\n",
    "    batch_time = AverageMeter()\n",
    "    losses = AverageMeter()\n",
    "    N = len(train_loader)\n",
    "    end = time.time()\n",
    "\n",
    "    for i, (sample) in enumerate(train_loader):\n",
    "        \n",
    "       \n",
    "        # Load a batch and send it to GPU\n",
    "        x = sample['image'].float().cuda()\n",
    "        #y = sample['label'].float().cuda()\n",
    "        y = sample['label'].cuda()\n",
    "        # Forward pass: compute predicted y by passing x to the model.\n",
    "        \n",
    "        y_pred = model(x)\n",
    "        # Compute and print loss.\n",
    "        \n",
    "        loss = loss_fn(y_pred, y)\n",
    "\n",
    "        # Record loss\n",
    "        losses.update(loss.data.item(), x.size(0))\n",
    "\n",
    "        # Before the backward pass, use the optimizer object to zero all of the\n",
    "        # gradients for the variables it will update (which are the learnable\n",
    "        # weights of the model).\n",
    "        optimizer.zero_grad()\n",
    "        \n",
    "\n",
    "        # Backward pass: compute gradient of the loss with respect to model parameters\n",
    "        loss.backward()\n",
    "\n",
    "        # Calling the step function on an Optimizer makes an update to its parameters\n",
    "        optimizer.step()\n",
    "\n",
    "        # Measure elapsed time\n",
    "        batch_time.update(time.time() - end)\n",
    "        end = time.time()\n",
    "        eta = str(datetime.timedelta(seconds=int(batch_time.val*(N - i))))\n",
    "\n",
    "        # Log training progress\n",
    "        if i % ITER_PER_REPORT == 0:\n",
    "            print('\\nEpoch: [{0}][{1}/{2}]\\t' 'Time {batch_time.val:.3f} ({batch_time.sum:.3f})\\t' 'ETA {eta}\\t'\n",
    "             'Training Loss {loss.val:.4f} ({loss.avg:.4f})'.format(epoch, i, N, batch_time=batch_time, loss=losses, eta=eta))\n",
    "        elif i % (ITER_PER_REPORT) == 0:\n",
    "            print('.', end='')\n",
    "\n",
    "        #break # useful for quick debugging\n",
    "    torch.cuda.empty_cache(); del x, y; gc.collect()\n",
    "\n",
    "    # Validation after each epoch\n",
    "    model.eval()\n",
    "    metrics.reset()\n",
    "    for i, (sample) in enumerate(valid_loader):\n",
    "        x, y = sample['image'].float().cuda(), sample['label'].numpy()\n",
    "        with torch.no_grad():\n",
    "            y_pred = model(x)\n",
    "            y_pred = torch.argmax(y_pred, dim=1) # get the most likely prediction\n",
    "\n",
    "        metrics.add_batch(y, y_pred.detach().cpu().numpy())\n",
    "        print('_', end='')\n",
    "    print('\\nValidation stats ', metrics.get_table())\n",
    "\n",
    "\n",
    "# Save model\n",
    "torch.save(model.state_dict(), save_path)\n",
    "print('\\nTraining done. Model saved ({}).'.format(save_path))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualization  [2 points]\n",
    "Use the `decode_segmap` function to visualize images and their segmentation. The images must be from the validation set.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "Caught TypeError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py\", line 178, in _worker_loop\n    data = fetcher.fetch(index)\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py\", line 47, in fetch\n    return self.collate_fn(data)\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 74, in default_collate\n    return {key: default_collate([d[key] for d in batch]) for key in elem}\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 74, in <dictcomp>\n    return {key: default_collate([d[key] for d in batch]) for key in elem}\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 81, in default_collate\n    raise TypeError(default_collate_err_msg_format.format(elem_type))\nTypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'imageio.core.util.Array'>\n",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-48-5e59c57460df>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msample\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0miter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalid_loader\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    817\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    818\u001b[0m                 \u001b[0;32mdel\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_task_info\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 819\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_process_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    820\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    821\u001b[0m     \u001b[0mnext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__next__\u001b[0m  \u001b[0;31m# Python 2 compatibility\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_process_data\u001b[0;34m(self, data)\u001b[0m\n\u001b[1;32m    844\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_try_put_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    845\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mExceptionWrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 846\u001b[0;31m             \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreraise\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    847\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    848\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/ML/lib/python3.7/site-packages/torch/_utils.py\u001b[0m in \u001b[0;36mreraise\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    383\u001b[0m             \u001b[0;31m# (https://bugs.python.org/issue2651), so we work around it.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    384\u001b[0m             \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKeyErrorMessage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 385\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexc_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m: Caught TypeError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py\", line 178, in _worker_loop\n    data = fetcher.fetch(index)\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py\", line 47, in fetch\n    return self.collate_fn(data)\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 74, in default_collate\n    return {key: default_collate([d[key] for d in batch]) for key in elem}\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 74, in <dictcomp>\n    return {key: default_collate([d[key] for d in batch]) for key in elem}\n  File \"/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py\", line 81, in default_collate\n    raise TypeError(default_collate_err_msg_format.format(elem_type))\nTypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'imageio.core.util.Array'>\n"
     ]
    }
   ],
   "source": [
    "sample = iter(valid_loader).next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DataParallel(\n",
       "  (module): Model(\n",
       "    (down1): Down(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down2): Down(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down3): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down4): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down5): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (up1): Up(\n",
       "      (up): ConvTranspose2d(1024, 512, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up2): Up(\n",
       "      (up): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up3): Up(\n",
       "      (up): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up4): Up(\n",
       "      (up): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (conv): Conv2d(64, 21, kernel_size=(1, 1), stride=(1, 1))\n",
       "  )\n",
       ")"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = create_model_gpu()\n",
    "model.load_state_dict(torch.load('seg_model_gpu[0, 1, 2, 3]_n100_bs16_lr0.001.pkl'))\n",
    "model.eval() # set to evaluation mode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = sample['image'].float().cuda()\n",
    "y_pred, y = model(x), sample['label'].numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x7f697182ae80>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['image'], padding=0).permute((1, 2, 0)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'raw_image'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-46-5d164c03e2c6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m \u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtorchvision\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_grid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'raw_image'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpadding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpermute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m: 'raw_image'"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 648x648 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['raw_image'], padding=0).permute((1, 2, 0)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(256, 256, 3)\n",
      "(256, 256)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "decode_segmap(y[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor([[[[-1.8232e+00, -7.4714e-01, -6.2621e-01,  ..., -1.2807e+00,\n",
      "           -7.6362e-01, -3.7592e-01],\n",
      "          [-1.9613e+00, -1.3405e+00, -2.9205e-01,  ..., -1.8845e-01,\n",
      "           -1.1984e-01,  1.3256e-01],\n",
      "          [-1.7386e+00, -6.8802e-01, -1.6121e-01,  ..., -2.0553e+00,\n",
      "           -1.0061e+00, -1.8501e-01],\n",
      "          ...,\n",
      "          [-2.9698e-01,  4.4976e-03,  3.5449e-01,  ..., -5.6037e-01,\n",
      "           -8.5167e-01,  6.5849e-01],\n",
      "          [-2.3886e-01, -7.7414e-01, -2.3511e-01,  ..., -4.3090e-01,\n",
      "           -1.8909e-02,  1.1475e+00],\n",
      "          [ 3.6678e-02, -1.8029e-01, -2.2664e-01,  ..., -8.6593e-01,\n",
      "           -3.6379e-01,  3.9941e-01]],\n",
      "\n",
      "         [[-3.6874e-01, -7.2842e-02,  1.3164e-01,  ...,  3.4124e-01,\n",
      "            1.0349e+00,  5.5677e-01],\n",
      "          [-7.2954e-01, -9.1147e-01, -4.9053e-01,  ...,  2.7037e-01,\n",
      "           -2.0213e-01,  7.0845e-02],\n",
      "          [-3.4776e-01, -1.0992e-01, -1.2738e-01,  ..., -1.8107e-01,\n",
      "           -6.8827e-01,  1.0697e+00],\n",
      "          ...,\n",
      "          [-7.9210e-02, -6.2762e-01, -2.5573e-01,  ...,  5.3269e-01,\n",
      "           -2.4954e-02,  2.9133e-01],\n",
      "          [ 2.5751e-01, -1.1191e-03,  1.1193e-01,  ..., -2.8607e-01,\n",
      "           -3.5920e-01,  1.7947e-01],\n",
      "          [-1.2022e-01,  3.2553e-02, -1.7259e-01,  ..., -1.3349e-01,\n",
      "           -4.1004e-01,  2.1798e-01]],\n",
      "\n",
      "         [[-4.0128e-01, -4.4861e-04,  6.7873e-01,  ...,  3.9556e-01,\n",
      "            2.0781e-01,  7.9280e-01],\n",
      "          [-5.1039e-02,  8.0274e-01,  3.7818e-01,  ..., -7.7560e-02,\n",
      "            8.8246e-01,  3.5773e-01],\n",
      "          [-4.5735e-01,  1.4115e+00,  3.4895e-01,  ...,  6.4327e-01,\n",
      "           -5.4917e-01,  8.3989e-01],\n",
      "          ...,\n",
      "          [-1.2222e-02,  3.6756e-01,  1.1985e-01,  ..., -4.7052e-01,\n",
      "           -1.0731e+00, -6.2172e-01],\n",
      "          [ 6.2439e-02,  2.8243e-01,  1.5360e-01,  ...,  9.3262e-01,\n",
      "            1.3035e-01,  4.7669e-01],\n",
      "          [ 7.0075e-02,  1.4488e-02,  2.3108e-01,  ..., -8.6884e-02,\n",
      "            3.3705e-01,  1.8891e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.7124e-01, -1.1934e+00, -6.5459e-01,  ..., -6.3993e-01,\n",
      "           -3.5095e-01, -8.4628e-01],\n",
      "          [ 5.3022e-01, -2.0353e+00, -1.7755e-01,  ...,  1.0256e-02,\n",
      "           -2.3811e-01, -6.6456e-01],\n",
      "          [ 5.8178e-01, -1.7108e+00, -6.0124e-01,  ..., -3.8914e-01,\n",
      "           -7.1294e-01, -1.5057e+00],\n",
      "          ...,\n",
      "          [ 2.1556e-02, -1.4728e-01, -6.4505e-02,  ..., -8.0687e-01,\n",
      "           -3.3553e-01, -9.7131e-01],\n",
      "          [ 4.2290e-01, -8.7414e-02,  5.1157e-01,  ..., -3.3744e-01,\n",
      "           -1.3287e+00, -4.1417e-01],\n",
      "          [ 2.1972e-01,  1.1086e-02,  4.5357e-01,  ..., -4.6162e-01,\n",
      "           -7.9992e-01, -1.9537e-01]],\n",
      "\n",
      "         [[-8.6725e-01,  9.1447e-02,  3.3120e-01,  ...,  6.1317e-01,\n",
      "            4.4001e-01,  1.0696e+00],\n",
      "          [-6.5098e-01, -4.8072e-01, -1.1113e+00,  ..., -6.1291e-01,\n",
      "           -1.0787e+00, -4.8770e-01],\n",
      "          [-1.1592e+00,  2.3867e-01, -3.1914e-01,  ..., -5.7023e-01,\n",
      "           -6.0045e-01, -5.5850e-01],\n",
      "          ...,\n",
      "          [ 3.5978e-02, -1.3868e-01,  2.6878e-01,  ...,  1.6853e-01,\n",
      "           -1.2177e+00,  1.2228e-01],\n",
      "          [ 6.4551e-02,  1.9267e-01,  2.8726e-01,  ..., -4.9168e-02,\n",
      "            1.7396e-01,  4.6158e-02],\n",
      "          [ 2.7414e-01, -1.6334e-01, -1.7467e-02,  ...,  1.0013e-01,\n",
      "           -3.1952e-02, -2.4244e-01]],\n",
      "\n",
      "         [[ 5.7333e-01,  9.6400e-01, -2.6295e-01,  ...,  5.2522e-01,\n",
      "           -6.8802e-02, -1.8973e-01],\n",
      "          [ 2.0212e+00,  1.6180e+00,  1.5659e+00,  ...,  7.3883e-01,\n",
      "            6.2767e-01,  1.4173e+00],\n",
      "          [ 1.2985e+00,  4.9322e-01, -4.5384e-01,  ..., -9.5574e-02,\n",
      "           -1.4339e+00,  5.8505e-01],\n",
      "          ...,\n",
      "          [ 5.6234e-01,  4.0882e-01,  1.5294e-01,  ...,  2.0346e-01,\n",
      "           -1.0059e+00,  6.7536e-01],\n",
      "          [ 4.5289e-02,  6.0279e-01,  3.5565e-01,  ...,  8.7153e-01,\n",
      "           -3.9634e-02, -1.4979e-01],\n",
      "          [ 3.7634e-01,  1.6499e-01,  2.7713e-01,  ...,  1.7177e-01,\n",
      "           -2.4719e-01,  6.2250e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.0911e+00, -1.0212e+00, -9.7990e-01,  ..., -3.3819e-01,\n",
      "           -5.5273e-01, -5.6547e-01],\n",
      "          [-2.3076e+00, -1.5330e+00, -4.2918e-01,  ..., -1.9066e-01,\n",
      "           -3.5170e-01, -1.1732e-01],\n",
      "          [-1.9540e+00, -4.0013e-01, -1.7830e-02,  ...,  1.1283e-01,\n",
      "           -6.0395e-01, -7.2290e-01],\n",
      "          ...,\n",
      "          [-9.9622e-01, -3.7601e-01, -4.6565e-01,  ..., -4.0350e-01,\n",
      "           -8.9826e-01,  1.2352e-02],\n",
      "          [-7.6688e-01, -5.1110e-01, -7.5471e-01,  ..., -6.0182e-01,\n",
      "           -8.5223e-01, -1.6842e-01],\n",
      "          [-2.3451e-01, -2.1082e-01, -4.8814e-01,  ..., -1.4824e-01,\n",
      "           -2.3269e-01, -2.0739e-02]],\n",
      "\n",
      "         [[-4.3126e-01, -2.5896e-01, -3.9011e-03,  ...,  3.5751e-01,\n",
      "            2.6542e-01,  3.4133e-01],\n",
      "          [-1.0300e+00, -1.0441e+00, -8.5093e-01,  ...,  1.1253e-01,\n",
      "            2.1838e-01,  2.0737e-01],\n",
      "          [-2.3774e-01, -5.8016e-01, -1.3382e-01,  ...,  7.5315e-02,\n",
      "            2.1713e-01,  2.3880e-01],\n",
      "          ...,\n",
      "          [ 2.7291e-01, -1.0791e-01,  8.1355e-02,  ..., -8.8283e-03,\n",
      "            1.4102e-02,  4.4813e-01],\n",
      "          [ 2.9784e-01, -1.1144e-01,  8.7623e-02,  ...,  1.0117e-01,\n",
      "           -1.0424e-01,  2.5099e-01],\n",
      "          [-1.0547e-01,  1.1510e-01,  9.9074e-02,  ...,  4.4253e-01,\n",
      "            2.7947e-01,  2.8288e-01]],\n",
      "\n",
      "         [[-4.3297e-01, -1.6355e-02,  7.5908e-01,  ..., -1.1516e-01,\n",
      "           -1.1902e-01, -1.7391e-01],\n",
      "          [-4.6423e-02,  7.6317e-01,  6.9892e-01,  ..., -5.4614e-02,\n",
      "           -4.0201e-02, -2.6371e-01],\n",
      "          [-6.0797e-01,  1.5308e+00,  4.9520e-01,  ...,  9.4060e-03,\n",
      "            4.4380e-02, -5.3686e-01],\n",
      "          ...,\n",
      "          [ 3.0787e-02,  3.4528e-02, -1.8239e-01,  ...,  1.2205e-01,\n",
      "           -7.3271e-02, -7.8323e-02],\n",
      "          [ 4.1011e-01, -7.5340e-02, -1.5450e-01,  ..., -1.0512e-01,\n",
      "           -4.9300e-02, -1.1573e-01],\n",
      "          [ 4.6305e-02, -3.9268e-01, -2.7465e-01,  ..., -1.8744e-01,\n",
      "            1.7095e-01, -1.4362e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.0188e-01, -1.4159e+00, -8.0045e-01,  ...,  4.3603e-02,\n",
      "           -2.3899e-01,  2.3182e-01],\n",
      "          [ 7.5928e-01, -2.2623e+00, -5.1889e-01,  ..., -1.5773e-01,\n",
      "           -3.4217e-01, -1.6008e-01],\n",
      "          [ 6.8787e-01, -2.1432e+00, -6.2496e-01,  ..., -4.0162e-01,\n",
      "           -5.9570e-01, -4.5986e-01],\n",
      "          ...,\n",
      "          [-1.4776e-01, -1.9064e-01, -1.9188e-01,  ..., -8.0765e-02,\n",
      "            3.1432e-01,  3.8431e-01],\n",
      "          [ 1.0078e-02,  8.9598e-02, -9.2547e-02,  ...,  5.6650e-02,\n",
      "            4.1773e-01,  3.7296e-01],\n",
      "          [ 2.9203e-01,  1.8532e-01,  6.2039e-01,  ...,  5.8155e-01,\n",
      "            8.5174e-01,  6.8107e-01]],\n",
      "\n",
      "         [[-1.0481e+00,  1.9247e-01,  4.0048e-01,  ...,  2.4650e-01,\n",
      "           -2.4687e-02,  2.4796e-01],\n",
      "          [-8.0535e-01, -4.5796e-01, -1.0087e+00,  ...,  2.8296e-01,\n",
      "            2.0785e-01,  2.8369e-01],\n",
      "          [-1.2754e+00,  1.2794e-01, -7.5138e-01,  ...,  3.2416e-01,\n",
      "           -1.2748e-01,  7.4837e-02],\n",
      "          ...,\n",
      "          [ 2.0501e-01,  2.0126e-01,  1.9957e-01,  ...,  2.7462e-01,\n",
      "           -4.4871e-01,  9.2259e-02],\n",
      "          [ 5.7764e-02,  6.5365e-02,  3.5700e-01,  ...,  2.8246e-01,\n",
      "           -3.1561e-01,  2.6995e-01],\n",
      "          [ 2.8894e-01, -8.6916e-03, -1.1688e-02,  ..., -8.9903e-02,\n",
      "            8.2577e-02,  8.1795e-02]],\n",
      "\n",
      "         [[ 7.5876e-01,  1.0999e+00, -2.9424e-01,  ..., -1.1969e-02,\n",
      "           -1.1880e-01, -3.9181e-02],\n",
      "          [ 2.1177e+00,  1.9836e+00,  1.9528e+00,  ...,  7.6012e-02,\n",
      "            1.1475e-01, -7.3791e-02],\n",
      "          [ 1.3541e+00,  5.4385e-01, -2.3647e-01,  ...,  1.3001e-01,\n",
      "           -2.9734e-01, -2.6609e-01],\n",
      "          ...,\n",
      "          [ 7.8599e-01,  9.1958e-02,  2.4965e-01,  ...,  9.2212e-02,\n",
      "           -5.8855e-02, -1.2798e-01],\n",
      "          [ 4.3872e-01,  4.5689e-01,  5.6099e-01,  ...,  1.3614e-01,\n",
      "            9.8933e-02, -1.0230e-01],\n",
      "          [ 3.1538e-01, -2.4864e-01,  1.2331e-01,  ...,  5.8311e-03,\n",
      "            2.0722e-01,  3.2798e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.1050e+00, -9.4391e-01, -8.4729e-01,  ..., -1.4543e+00,\n",
      "           -7.3094e-01, -2.8849e-01],\n",
      "          [-2.3359e+00, -1.4117e+00, -2.4496e-01,  ..., -4.2740e-01,\n",
      "           -1.1258e-01,  1.5146e-01],\n",
      "          [-2.1565e+00, -5.9633e-01, -3.6939e-02,  ..., -2.2431e+00,\n",
      "           -1.0858e+00, -5.4626e-02],\n",
      "          ...,\n",
      "          [ 5.4655e-02, -5.1729e-01,  1.2002e-01,  ..., -3.8355e-02,\n",
      "           -5.8866e-01, -6.1594e-02],\n",
      "          [-2.5947e-01, -9.9996e-01, -4.6919e-01,  ..., -2.2015e-01,\n",
      "           -1.7430e-01, -4.9148e-01],\n",
      "          [ 3.7043e-02, -6.3348e-02, -1.2397e-02,  ...,  4.7949e-02,\n",
      "           -8.6479e-02, -1.4232e-01]],\n",
      "\n",
      "         [[-4.1846e-01, -1.7651e-01, -1.4295e-02,  ...,  3.6335e-01,\n",
      "            1.0919e+00,  7.0624e-01],\n",
      "          [-9.2386e-01, -1.1107e+00, -8.2110e-01,  ...,  2.2144e-01,\n",
      "           -3.3793e-01,  4.2662e-02],\n",
      "          [-3.4544e-01, -5.4063e-01, -1.8838e-01,  ..., -2.1451e-01,\n",
      "           -8.8265e-01,  1.0638e+00],\n",
      "          ...,\n",
      "          [-2.2634e-02, -7.0195e-01,  2.2347e-01,  ...,  2.3095e-01,\n",
      "           -1.3869e-01,  2.4708e-01],\n",
      "          [ 1.8556e-01, -4.5847e-01,  1.1823e-01,  ...,  6.4630e-02,\n",
      "            8.1413e-02,  3.5088e-01],\n",
      "          [-5.1756e-01, -3.3560e-01, -2.4518e-01,  ...,  2.4428e-01,\n",
      "            6.6673e-02,  3.2051e-01]],\n",
      "\n",
      "         [[-5.0272e-01,  2.7300e-02,  7.9936e-01,  ...,  4.7226e-01,\n",
      "            3.1443e-01,  1.0007e+00],\n",
      "          [ 8.7777e-02,  8.6149e-01,  7.3922e-01,  ..., -4.8021e-02,\n",
      "            8.8117e-01,  5.0359e-01],\n",
      "          [-5.4692e-01,  1.5683e+00,  6.7775e-01,  ...,  8.2135e-01,\n",
      "           -5.2463e-01,  9.4529e-01],\n",
      "          ...,\n",
      "          [ 6.5888e-02,  7.7358e-01,  1.5035e-01,  ...,  1.1560e-01,\n",
      "           -3.3561e-01, -3.4115e-01],\n",
      "          [ 2.0554e-01,  1.0091e+00,  5.0461e-01,  ..., -4.4987e-02,\n",
      "           -1.3557e-01, -2.2397e-01],\n",
      "          [ 6.0602e-02,  6.3525e-01,  8.6411e-02,  ..., -1.8062e-01,\n",
      "            6.0058e-02, -3.2814e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.0177e-01, -1.5690e+00, -7.8157e-01,  ..., -6.7048e-01,\n",
      "           -5.1053e-01, -1.0933e+00],\n",
      "          [ 5.5530e-01, -2.4420e+00, -3.5678e-01,  ..., -2.3322e-01,\n",
      "           -4.4506e-01, -7.8338e-01],\n",
      "          [ 5.7257e-01, -2.0632e+00, -1.0661e+00,  ..., -6.2915e-01,\n",
      "           -8.9094e-01, -1.6347e+00],\n",
      "          ...,\n",
      "          [ 3.2659e-01, -7.1448e-01, -4.5696e-01,  ...,  2.2684e-01,\n",
      "            4.3584e-01,  5.6113e-01],\n",
      "          [ 5.0182e-01, -8.0252e-01,  5.4512e-01,  ...,  6.1080e-02,\n",
      "            2.6472e-01,  2.6521e-01],\n",
      "          [ 2.3780e-01, -1.1847e-01,  1.6427e-01,  ...,  4.1440e-01,\n",
      "            3.6170e-01,  4.5915e-01]],\n",
      "\n",
      "         [[-1.0877e+00,  7.6405e-02,  4.0188e-01,  ...,  5.8941e-01,\n",
      "            5.1784e-01,  1.1642e+00],\n",
      "          [-8.0406e-01, -5.4385e-01, -1.3427e+00,  ..., -7.5663e-01,\n",
      "           -1.2474e+00, -6.2550e-01],\n",
      "          [-1.3797e+00,  7.1066e-02, -4.5083e-01,  ..., -5.9921e-01,\n",
      "           -6.6366e-01, -7.0443e-01],\n",
      "          ...,\n",
      "          [-1.9145e-01, -1.9389e-01,  4.7291e-01,  ...,  2.0533e-01,\n",
      "           -2.2829e-01,  2.5538e-01],\n",
      "          [-1.9701e-01,  4.8773e-01,  4.7312e-01,  ...,  2.6478e-01,\n",
      "            1.7575e-01,  2.4827e-01],\n",
      "          [-8.0339e-02, -1.9722e-02,  9.4274e-02,  ...,  1.8696e-02,\n",
      "            1.9362e-01,  4.6583e-02]],\n",
      "\n",
      "         [[ 6.6104e-01,  1.1150e+00, -3.6801e-01,  ...,  6.1585e-01,\n",
      "            2.7803e-02, -2.3442e-01],\n",
      "          [ 2.3799e+00,  1.9111e+00,  1.9203e+00,  ...,  9.8403e-01,\n",
      "            8.4523e-01,  1.5499e+00],\n",
      "          [ 1.5563e+00,  6.9239e-01, -4.0794e-01,  ...,  2.1864e-02,\n",
      "           -1.5046e+00,  6.8152e-01],\n",
      "          ...,\n",
      "          [ 6.4221e-01,  1.0726e+00, -2.1425e-02,  ..., -3.8668e-02,\n",
      "           -2.5405e-01,  9.9637e-03],\n",
      "          [ 3.8007e-01,  9.4518e-01,  7.1628e-01,  ...,  1.9758e-01,\n",
      "           -8.4147e-02, -9.5846e-02],\n",
      "          [ 8.6530e-01,  6.9521e-01,  2.7351e-01,  ...,  9.2720e-02,\n",
      "            1.3732e-01,  1.7445e-01]]],\n",
      "\n",
      "\n",
      "        [[[-4.0497e-01,  1.0856e-01, -2.5349e-01,  ..., -1.9386e-01,\n",
      "           -7.3432e-01, -3.7155e-01],\n",
      "          [-1.1543e+00, -6.1200e-01, -6.9553e-01,  ..., -7.4737e-01,\n",
      "           -6.9637e-01, -2.7454e-01],\n",
      "          [-1.0002e+00, -3.1291e-01, -8.6912e-01,  ..., -5.1014e-01,\n",
      "           -8.0582e-01, -6.9024e-01],\n",
      "          ...,\n",
      "          [-1.7907e-01,  3.8475e-02,  1.9490e-01,  ..., -1.6782e-01,\n",
      "           -5.6917e-01, -4.7664e-02],\n",
      "          [-2.7414e-01, -5.9690e-01, -1.1546e-01,  ..., -5.1207e-01,\n",
      "           -6.3520e-01, -2.1052e-01],\n",
      "          [ 9.0131e-03, -1.7166e-01, -3.2913e-01,  ..., -7.6221e-02,\n",
      "           -1.6656e-01, -1.0686e-01]],\n",
      "\n",
      "         [[ 2.2330e-01,  4.1849e-02,  2.0392e-02,  ...,  3.2332e-01,\n",
      "            3.7200e-01,  5.3475e-01],\n",
      "          [ 1.5933e-01, -1.7027e-01, -2.6811e-01,  ..., -2.6645e-01,\n",
      "           -2.3079e-01,  2.7100e-01],\n",
      "          [ 3.3809e-01,  4.0822e-03,  2.1837e-01,  ...,  2.6893e-01,\n",
      "            1.4227e-01,  4.9328e-01],\n",
      "          ...,\n",
      "          [-1.5214e-01, -4.5440e-01,  1.0156e-01,  ...,  5.0034e-02,\n",
      "           -1.2618e-01,  3.8181e-01],\n",
      "          [ 5.3030e-02,  1.4530e-01,  2.3969e-01,  ...,  1.2662e-02,\n",
      "           -6.2321e-02,  2.6051e-01],\n",
      "          [-2.4443e-01,  1.2469e-01, -3.8129e-02,  ...,  3.6569e-01,\n",
      "            2.0994e-01,  2.9720e-01]],\n",
      "\n",
      "         [[ 5.5240e-01,  1.1650e-01,  3.6033e-01,  ..., -5.1678e-02,\n",
      "            7.2456e-02, -2.2005e-01],\n",
      "          [ 5.9685e-01, -6.2216e-02,  8.6107e-03,  ...,  3.1667e-01,\n",
      "           -2.2417e-01, -1.3914e-01],\n",
      "          [ 8.0647e-01,  1.3866e-01, -3.8656e-02,  ...,  1.8126e-01,\n",
      "           -8.1521e-02, -5.6799e-01],\n",
      "          ...,\n",
      "          [-7.7283e-02,  4.4711e-01,  1.2892e-01,  ...,  7.1760e-02,\n",
      "           -9.6275e-02, -7.1780e-02],\n",
      "          [ 1.7582e-02,  2.2827e-02,  1.5841e-01,  ..., -1.7004e-01,\n",
      "           -7.0725e-02, -2.0436e-01],\n",
      "          [-2.7659e-02, -7.6442e-02, -3.5151e-02,  ..., -1.6249e-01,\n",
      "            1.5970e-01, -2.5740e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0110e-01, -1.4672e-02,  3.5074e-02,  ...,  1.8083e-01,\n",
      "            1.8520e-01,  3.4607e-01],\n",
      "          [-1.6210e-01, -6.1901e-01, -5.9901e-01,  ..., -3.1964e-01,\n",
      "           -3.1675e-01, -5.5359e-01],\n",
      "          [-1.7307e-01, -4.9894e-01, -2.6483e-01,  ..., -3.5616e-01,\n",
      "            5.8983e-02, -2.0037e-02],\n",
      "          ...,\n",
      "          [ 1.2407e-01,  5.4747e-02,  2.2948e-01,  ..., -2.0642e-02,\n",
      "            2.0571e-01,  4.1599e-01],\n",
      "          [ 4.4306e-01,  4.3987e-02,  3.1503e-01,  ..., -1.2564e-01,\n",
      "            2.4138e-01,  3.8861e-01],\n",
      "          [ 2.7847e-01,  1.7706e-01,  4.5659e-01,  ...,  4.4007e-01,\n",
      "            7.0212e-01,  5.6772e-01]],\n",
      "\n",
      "         [[ 1.2166e-02,  2.3771e-01,  7.8884e-03,  ...,  9.0969e-03,\n",
      "           -4.6665e-01,  3.4299e-02],\n",
      "          [ 3.8012e-02,  3.3558e-01,  4.1299e-01,  ...,  1.9827e-01,\n",
      "            1.0274e-01,  2.4557e-01],\n",
      "          [ 8.7420e-02,  2.6320e-01,  9.4084e-02,  ...,  7.7356e-01,\n",
      "           -4.5978e-01,  1.6927e-01],\n",
      "          ...,\n",
      "          [-1.0503e-01,  6.7369e-02,  2.8293e-01,  ...,  2.4412e-01,\n",
      "           -3.6729e-01,  1.7687e-01],\n",
      "          [ 7.0288e-02,  8.4354e-02,  2.0597e-01,  ...,  3.0439e-01,\n",
      "           -1.3846e-01,  2.1537e-01],\n",
      "          [ 1.9533e-01, -1.8050e-01,  1.2799e-03,  ...,  4.3944e-02,\n",
      "            1.1446e-01,  6.7884e-02]],\n",
      "\n",
      "         [[ 1.4222e-01,  4.5270e-01,  3.3086e-02,  ...,  5.1462e-02,\n",
      "           -9.1688e-02, -8.3739e-03],\n",
      "          [ 6.1455e-01,  2.5806e-01,  3.1413e-01,  ...,  5.2672e-01,\n",
      "           -3.4372e-02, -3.8282e-01],\n",
      "          [ 5.0377e-01,  6.9077e-01,  6.1009e-01,  ...,  3.4655e-01,\n",
      "           -1.6655e-01, -6.3853e-01],\n",
      "          ...,\n",
      "          [ 4.5273e-01,  1.9036e-01, -2.0212e-01,  ..., -1.8725e-02,\n",
      "           -1.7453e-02,  1.7158e-02],\n",
      "          [-5.6297e-02,  2.1825e-01,  4.0073e-01,  ...,  2.0713e-01,\n",
      "            8.3948e-02, -5.8330e-02],\n",
      "          [ 3.6756e-01,  1.0250e-01, -2.1585e-02,  ..., -1.0436e-01,\n",
      "            1.4439e-01,  2.0426e-01]]]], device='cuda:0',\n",
      "       grad_fn=<CudnnConvolutionBackward>)\n"
     ]
    }
   ],
   "source": [
    "print(y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(256, 256, 3)\n",
      "(256, 256)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred = torch.argmax(y_pred, dim=1)\n",
    "y_pred = y_pred.cpu().detach().numpy()\n",
    "decode_segmap(y_pred[0])"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [],
   "machine_shape": "hm",
   "name": "Project_Depth_Estimate_good.ipynb",
   "provenance": [],
   "version": "0.3.2"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
