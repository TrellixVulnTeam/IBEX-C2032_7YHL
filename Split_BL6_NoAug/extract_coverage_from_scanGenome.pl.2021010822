#!/usr/bin/perl -w
#
#
#Update 2020/12/22 Yongkang Long

my ($PAS,$file,$round,$polyASeqRCThreshold,$RNASeqRCThreshold,$augmentation) = @ARGV;
print "$file\n";

open FILE,"$PAS";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$end,$srd,$symbol,$usage,$polyASeqRC,undef,undef,$RNASeqRC) = split;
	next if $polyASeqRC < $polyASeqRCThreshold;
	next if $RNASeqRC   < $RNASeqRCThreshold;
	my $pos = $end;
	if ($augmentation eq "NOAUG"){
		if($srd eq "+"){
			$pas_plus{"$chr:$pos:$srd"}  .= 'Origin';
		}
		else{
			$pas_plus{"$chr:$pos:$srd"} .= 'Origin';
		}
	}
	elsif ($augmentation eq "aug"){
		$pas_plus{"$chr:$pos:$srd"}  .= 'Origin';
		for (my $i=1;$i<20;$i++){
			if($srd eq "+"){
				$pos = $end-$i;
			}
			elsif($srd eq "-"){
				$pos = $end+$i;
			}
			else{
				print "Warning. Invalid stranding $srd at pas $pas_id\n";
			}
			$pas_plus{"$chr:$pos:$srd"} .= "Up$i";

			if($srd eq "+"){
				$pos = $end+$i;
			}
			elsif($srd eq "-"){
				$pos = $end-$i;
			}
			$pas_plus{"$chr:$pos:$srd"} .= "Dn$i";
		}
	}
	else{
		die("parameter augmentation should be eigher AUG or NOAUG,please try again\n");
	}
}


open FILE,"$file";
my $header = <FILE>;
($baseName) = (split /\//,$file)[-1];
$out = "data/positive/$round/$baseName";
open OUT,">$out";
while(<FILE>){
	chomp;
	my @data = split /\t/;
	my $pas_id = $data[0];
	if(exists $pas_plus{$pas_id}){
		my $val = $pas_plus{$pas_id};
		$data[5] = $val;
		print OUT join("\t",@data),"\n";
	}
}
