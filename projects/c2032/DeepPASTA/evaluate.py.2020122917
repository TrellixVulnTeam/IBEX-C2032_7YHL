from SANPolyA import *
import re
import os, sys, copy, getopt, re, argparse
import random
import pandas as pd 
import numpy as np


def dataProcessing(data_path):
	data1 = [] #seq
	data2 = [] # shape1
	data3 = [] # shape2
	data4 = [] # shape3
	data5 = []
	alphabet = np.array(['A', 'T', 'C', 'G'])
	alphabet2 = np.array(['L', 'R','U', 'M', 'H', 'I','E'])

	with open(data_path,'r') as f:
		for line in f:
			line=line.rstrip('\n').split('\t')
			if (line[0]!='#pas_id')&(line[0]!='pas_id'):
				SEQUENCE=list(line[7])
				SEQUENCE=SEQUENCE[0:200]
				seq = np.array(SEQUENCE, dtype = '|U1').reshape(-1,1);
				seq_data = (seq == alphabet).astype(np.float32)
				data1.append(seq_data)
				
				SEQUENCE=list(line[8])
				SEQUENCE=SEQUENCE[0:200]
				seq = np.array(SEQUENCE, dtype = '|U1').reshape(-1,1);
				seq_data = (seq == alphabet2).astype(np.float32)
				data2.append(seq_data)

				SEQUENCE=list(line[9])
				SEQUENCE=SEQUENCE[0:200]
				seq = np.array(SEQUENCE, dtype = '|U1').reshape(-1,1);
				seq_data = (seq == alphabet2).astype(np.float32)
				data3.append(seq_data)

				SEQUENCE=list(line[10])
				SEQUENCE=SEQUENCE[0:200]
				seq = np.array(SEQUENCE, dtype = '|U1').reshape(-1,1);
				seq_data = (seq == alphabet2).astype(np.float32)
				data4.append(seq_data)

				data5.append(line[0])
	
	data1 = np.stack(data1).reshape([-1, 200, 4])
	data2 = np.stack(data2).reshape([-1, 200, 7])
	data3 = np.stack(data3).reshape([-1, 200, 7])
	data4 = np.stack(data4).reshape([-1, 200, 7])
	
	return data1 , data2, data3,data4,data5

def main():

    parser = argparse.ArgumentParser(description="identification of pAs cleavage site")
    parser.add_argument("--model", help="the model weights file", required=True)
    parser.add_argument("--data", help="input 200bp long sequence and coverage", required=True)
    parser.add_argument("--out", help="prediction files", required=True)
    args = parser.parse_args()


    Path = args.model
    data = args.data
    out  = args.out
    OUT=open(out,'w')
    data1,data2,data3,data4,pas_id= dataProcessing(data)
    keras_Model = SANPolyA_CNN();
    keras_Model.load_weights(Path)
    pred = keras_Model.predict({"input1": data1, "input2": data2,"input3": data3,"input4": data4})
    
    for i in range(len(pas_id)):
        OUT.write('%s\t%s\n'%(str(pas_id[i]),str(pred[i][0])))
    
if __name__ == "__main__":
    main()
