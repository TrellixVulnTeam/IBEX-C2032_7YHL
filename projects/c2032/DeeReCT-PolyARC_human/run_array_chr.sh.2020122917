#!/bin/bash
#SBATCH --job-name=Human
#SBATCH --partition=batch
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mail-user=yongkang.long@kaust.edu.sa
#SBATCH --mail-type=END
#SBATCH --output=log.%J
#SBATCH --time=1:00:00
#SBATCH --mem=500G
#SBATCH -a 0

#########SBATCH --gres=gpu:1

##SBATCH --dependency afterok:6686802_[1-100] 

#source activate ML

echo "This is job #${SLURM_ARRAY_JOB_ID}, task id ${SLURM_ARRAY_TASK_ID}"
rep="REP1"
allsteps=(1 1 1 1 1 1)
allstrands=("str2" "str1" "str2" "str1" "str2" "str1")
allsigns=("+" "-" "+" "-" "+" "-")
allchrs=("chr1" "chr2" "chr3" "chr4" "chr5" "chr6" "chr7" "chr8" "chr9" "chr10" "chr11" "chr12" "chr13" "chr14" "chr15" "chr16" "chr17" "chr18"  "chr19" "chrX" "chr20" "chr21" "chr22")  
for ((i=0;i<=119;i++))
do
	b=$(( $i % 2 ))
	c=$(( $i / 2))
	steps[$i]=${allsteps[$b]}
	strands[$i]=${allstrands[$b]}
	signs[$i]=${allsigns[$b]}
	chrs[$i]=${allchrs[$c]}
done

window=176
step=${steps[$SLURM_ARRAY_TASK_ID]}
strand=${strands[$SLURM_ARRAY_TASK_ID]}
sign=${signs[$SLURM_ARRAY_TASK_ID]}
chr=${chrs[$SLURM_ARRAY_TASK_ID]}


WIG="/home/longy/project/mountainClimber/STAR/HUM_Brain_${rep}/Signal.Unique.${strand}.out.${chr}.wig"
ScanGenome="data/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt"


spe=hg38
#perl generate_slidingWidnows.pl $WIG $ScanGenome $window $step $sign $chr $spe

#perl extract_test_chr.pl data/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt
Trim="data/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt"
Data="Data/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt"

#perl extract_coverage_from_scanGenome.pl $Trim 
#perl select_negative_from_scanGenome.pl $Trim $chr $sign
#perl select_exon_from_scanGenome.pl $Trim $chr $sign
#perl select_utr_from_scanGenome.pl $Trim $chr $sign

#########TRAIN
####March 26
round='newround1'
round2='newround2'
#python3 prep_data.py train_data/humanBrain.pAs.positive.REP1.${round}.txt train_data/humanBrain.pAs.negative.REP1.${round}.txt --out Data/humanBrain.pAs.${rep}.${round}.npz

testid=$SLURM_ARRAY_TASK_ID
#python3 train.accuracy.py Data/humanBrain.pAs.${rep}.${round}.npz --out Model/humanBrain.pAs.${rep}.${testid}.${round}.npz --hparam ../DeeReCT-PolyARC_Data/para/BL_hparamIn5.npz --trainid humanBrain.pAs.${rep}.${testid}.${round}


Data="Data/humanBrain.pAs.positive.${rep}.${round}"
python3 prep_test_data.py train_data/humanBrain.pAs.positive.REP1.${round}.txt --out $Data  ####You don't need to prepreare again and again
python3 test.scanGenome.py ${Data}.npz Model/humanBrain.pAs.REP1.0.${round}_epoch12.npz --testid humanBrain.pAs.positive.REP1.${round}

perl change_positive.pl train_data/humanBrain.pAs.positive.REP1.${round}.txt predict/humanBrain.pAs.positive.REP1.${round}.txt train_data/humanBrain.pAs.positive.REP1.${round2}.txt

####Validation
Trim="data_bk/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt.test.txt"
Data="Data/humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt.test.txt"
#python3 prep_test_data.py $Trim --out $Data  ####You don't need to prepreare again and again
#python3 test.scanGenome.py ${Data}.npz Model/humanBrain.pAs.REP1.0.round4_epoch8.npz --testid humanBrain.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt.${round}.test
