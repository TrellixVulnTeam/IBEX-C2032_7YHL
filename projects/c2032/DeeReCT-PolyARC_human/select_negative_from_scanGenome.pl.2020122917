#!/usr/bin/perl -w

my ($file,$CHR,$STR) = @ARGV;

my %true_pas;
open FILE,"/home/longy/workspace/apa_predict/pas_dataset/human.pAs.brain.txt";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$pos,$srd) = split;
	my ($gene_id) = split /\./,$pas_id;
	$true_pas{$pos} = '';
}

open FILE,"/home/longy/workspace/apa_predict/pas_dataset/human.pAs.all.txt";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$pos,$srd) = split;
	my ($gene_id) = split /\./,$pas_id;
	$true_pas{$pos} = '';
}

open FILE,"awk '(\$1 == \"$CHR\" && \$3 == \"three_prime_utr\" && \$7 ==\"$STR\")' /home/longy/cnda/ensembl/hg38.ensemblv95.nopsuedo.gtf |";
while(<FILE>){
	chomp;
	my ($chr,$str,$end,$srd,$gene_id,$gene_name) = (split)[0,3,4,6,9,17];
	$gene_id =~ s/\"|\;//g;
	$gene_name =~ s/\"|\;//g;
	####### To avoid to close to the exon
	if($srd eq "+"){
		$true_pas{$end} = '';
	}
	else{
		$true_pas{$str} = '';
	}

}

my @sort_true_pas = sort{$a<=>$b} keys %true_pas;

open FILE,"$file";
my $header = <FILE>;

($file) = (split /\//,$file)[-1];
$file = "train_data/$file";
open OUT,">$file.negative";
#print OUT "$header";
my $index = 0;
while(<FILE>){
	chomp;
	my @data = split /\t/;
	my ($pas_id,$pas_type,$chr,$pos,$srd) =  @data[0..4];
	my $p = 0.0008;
	#if($pas_type ne "motif=0"){
	#	$p = $p* 90;
	#}
	if(rand() < $p){
		my $accept = 1;
		my $sum = 0;
		my $count=0;
		for(my$i=8;$i<@data;$i++){
			if($data[$i]>0){
				$sum+= $data[$i];
				$count++;
			}
		}
		my $trimMean = $sum/$count;
		#next if $trimMean < 10;
		for(my$i=$index;$i<@sort_true_pas;$i++){
			if($sort_true_pas[$i] - $pos < -100){
				$index = $i;
				next;
			}
			elsif($sort_true_pas[$i] - $pos < 100){
				$accept = 0;
			}
			else{
				last;
			}
		}
		if($accept == 1){
			print OUT "$_\n";
		}
	}
}



