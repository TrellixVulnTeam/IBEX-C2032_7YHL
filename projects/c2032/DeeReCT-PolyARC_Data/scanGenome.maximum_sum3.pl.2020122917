#!/usr/bin/perl -w
#
#
#Upate 2019/11/07
#The negative justthe position wrong, but the data is correct

use POSIX;
my ($maxLength,$penality) = @ARGV;

my %pas;
open FILE,"data/bl6.pAs.fibroblast.REP1.positive.usage0.2.txt";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,undef,undef,$position) = split;
	$pas{$pas_id} = $position;
}

my %correct;
open FILE,"Correct_pas.txt";
while(<FILE>){
	chomp;
	my ($pas_id) = split;
	$correct{$pas_id} = '';
}

open OUT,">Stat/maxSum.$maxLength.$penality.txt";
foreach my $file (glob 'predict/bl6.pAs.scanGenome.step1.str2.REP1.chr*.Trimmed10.Optimize.txt'){
	&maxSum($file);
}

#&maxSum('test.txt');

my %distribution;
sub maxSum{
	my ($file) = @_;
	open FILE,$file;
	my %predict;
	while(<FILE>){
		chomp;
		my ($key,$predition) = split;
		if($key =~ /ENS/){
			my @id = split /,/,$key;
			if(@id ==1){
				$id = $id[0];
				my ($pas_id,$pos) = split /\-/,$id;
				if(exists $correct{$pas_id}){
					my $position = int(substr($pos,3));
					my $coor = $pas{$pas_id} + 100-$position;
					$predict{$pas_id}->{$coor} = $predition;
				}
			}
		}
	}

	while(my ($pas_id,$val) = each %predict){
		my $sum = 0;
		$val->{100000000000000} = 1;
		my @coor = sort{$a<=>$b} keys %$val;
		my $start = $coor[0];
		my $end = $coor[0];
		my $maxPos = $coor[0];
		my $maxPoint = 0;
		foreach my $coor (@coor){
			my $predition = $val->{$coor};
			if($coor-$end>1){
				if($sum >0){
					my $plus_length = floor(-$sum/$penality);
					#if($end-$start+$plus_length>$maxLength){
					if($maxPoint > $maxLength){
						my $length = $end-$start+$plus_length;
						my $diff = $maxPos-$pas{$pas_id};
						print OUT "$pas_id\t$pas{$pas_id}\t$start\t$end\t$diff\t$length\t$maxPos\n";
						$start = $coor;
						$sum = 0;
						$end = $coor;
						$maxPoint = 0;
					}
				}
				else{
					$start = $coor;
					$sum = 0;
					$end = $coor;
					$maxPoint = 0;
				}	
			}
			elsif($predition ==1){
				$sum += $penality;
				if($sum <= 0){
					my $length = $end-$start;
					#if($length>$maxLength){
					if($maxPoint > $maxLength){
						my $diff = $maxPos-$pas{$pas_id};
						print OUT "$pas_id\t$pas{$pas_id}\t$start\t$end\t$diff\t$length\t$maxPos\n";
					}
					$end = $coor;
					$start = $coor;
					$sum = 0;
					$maxPoint = 0;
				}
			}
			else{
				$sum++;
				if($maxPoint < $sum){
					$maxPoint = $sum;
					$maxPos = $coor;
				}
				if($sum <= 1){
					$start = $coor;
					$maxPoint = $sum;
					$maxPos = $coor;
				}
			}
			$end = $coor;
		}
	}
}

system("perl check_remaining_pas.pl $maxLength $penality");
