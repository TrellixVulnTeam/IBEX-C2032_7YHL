{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv(\"dragon_human_log\",sep=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'dragon_polyA_data')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1106e94a8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pointplot(df[df.phase==\"train\"].epoch,df[df.phase==\"train\"].acc)\n",
    "plt.title(\"dragon_polyA_data\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>loss</th>\n",
       "      <th>acc</th>\n",
       "      <th>sensitivity</th>\n",
       "      <th>auroc</th>\n",
       "      <th>auprc</th>\n",
       "      <th>epoch</th>\n",
       "      <th>phase</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.342350</td>\n",
       "      <td>0.505512</td>\n",
       "      <td>0.496184</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.292435</td>\n",
       "      <td>0.508141</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.226872</td>\n",
       "      <td>0.562839</td>\n",
       "      <td>0.493979</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.296092</td>\n",
       "      <td>0.518996</td>\n",
       "      <td>0.498982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.195332</td>\n",
       "      <td>0.663161</td>\n",
       "      <td>0.489993</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.326515</td>\n",
       "      <td>0.563772</td>\n",
       "      <td>0.498643</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.167223</td>\n",
       "      <td>0.737110</td>\n",
       "      <td>0.489145</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.333065</td>\n",
       "      <td>0.569539</td>\n",
       "      <td>0.498982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.141361</td>\n",
       "      <td>0.791808</td>\n",
       "      <td>0.489484</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.397195</td>\n",
       "      <td>0.555292</td>\n",
       "      <td>0.499322</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.127090</td>\n",
       "      <td>0.823100</td>\n",
       "      <td>0.491350</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.460576</td>\n",
       "      <td>0.562415</td>\n",
       "      <td>0.499322</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.112551</td>\n",
       "      <td>0.849474</td>\n",
       "      <td>0.491689</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.487041</td>\n",
       "      <td>0.578358</td>\n",
       "      <td>0.499322</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.103346</td>\n",
       "      <td>0.859566</td>\n",
       "      <td>0.493725</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.443457</td>\n",
       "      <td>0.581072</td>\n",
       "      <td>0.497965</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.093743</td>\n",
       "      <td>0.874661</td>\n",
       "      <td>0.494149</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.333810</td>\n",
       "      <td>0.651289</td>\n",
       "      <td>0.497286</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.107734</td>\n",
       "      <td>0.873558</td>\n",
       "      <td>0.493301</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.309855</td>\n",
       "      <td>0.648575</td>\n",
       "      <td>0.498643</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.060609</td>\n",
       "      <td>0.919182</td>\n",
       "      <td>0.497795</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.364747</td>\n",
       "      <td>0.655699</td>\n",
       "      <td>0.498982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.043338</td>\n",
       "      <td>0.945132</td>\n",
       "      <td>0.499576</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.450490</td>\n",
       "      <td>0.657734</td>\n",
       "      <td>0.498643</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.034172</td>\n",
       "      <td>0.956835</td>\n",
       "      <td>0.499491</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.422812</td>\n",
       "      <td>0.684871</td>\n",
       "      <td>0.497286</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.027798</td>\n",
       "      <td>0.966418</td>\n",
       "      <td>0.499746</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.509665</td>\n",
       "      <td>0.677408</td>\n",
       "      <td>0.498304</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.023128</td>\n",
       "      <td>0.972778</td>\n",
       "      <td>0.499406</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.516652</td>\n",
       "      <td>0.676391</td>\n",
       "      <td>0.496947</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>0.020629</td>\n",
       "      <td>0.978375</td>\n",
       "      <td>0.499322</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0.546056</td>\n",
       "      <td>0.684532</td>\n",
       "      <td>0.496608</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>0.014195</td>\n",
       "      <td>0.982446</td>\n",
       "      <td>0.499915</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>0.530440</td>\n",
       "      <td>0.692673</td>\n",
       "      <td>0.495590</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>0.010446</td>\n",
       "      <td>0.987449</td>\n",
       "      <td>0.499830</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>0.600144</td>\n",
       "      <td>0.690638</td>\n",
       "      <td>0.493894</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>0.011017</td>\n",
       "      <td>0.986007</td>\n",
       "      <td>0.499746</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0.696427</td>\n",
       "      <td>0.664179</td>\n",
       "      <td>0.495929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>0.008314</td>\n",
       "      <td>0.990078</td>\n",
       "      <td>0.499661</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>0.714979</td>\n",
       "      <td>0.662822</td>\n",
       "      <td>0.497286</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>val</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        loss       acc  sensitivity  auroc  auprc  epoch  phase\n",
       "0   0.342350  0.505512     0.496184    NaN    NaN      0  train\n",
       "1   0.292435  0.508141     0.500000    NaN    NaN      0    val\n",
       "2   0.226872  0.562839     0.493979    NaN    NaN      1  train\n",
       "3   0.296092  0.518996     0.498982    NaN    NaN      1    val\n",
       "4   0.195332  0.663161     0.489993    NaN    NaN      2  train\n",
       "5   0.326515  0.563772     0.498643    NaN    NaN      2    val\n",
       "6   0.167223  0.737110     0.489145    NaN    NaN      3  train\n",
       "7   0.333065  0.569539     0.498982    NaN    NaN      3    val\n",
       "8   0.141361  0.791808     0.489484    NaN    NaN      4  train\n",
       "9   0.397195  0.555292     0.499322    NaN    NaN      4    val\n",
       "10  0.127090  0.823100     0.491350    NaN    NaN      5  train\n",
       "11  0.460576  0.562415     0.499322    NaN    NaN      5    val\n",
       "12  0.112551  0.849474     0.491689    NaN    NaN      6  train\n",
       "13  0.487041  0.578358     0.499322    NaN    NaN      6    val\n",
       "14  0.103346  0.859566     0.493725    NaN    NaN      7  train\n",
       "15  0.443457  0.581072     0.497965    NaN    NaN      7    val\n",
       "16  0.093743  0.874661     0.494149    NaN    NaN      8  train\n",
       "17  0.333810  0.651289     0.497286    NaN    NaN      8    val\n",
       "18  0.107734  0.873558     0.493301    NaN    NaN      9  train\n",
       "19  0.309855  0.648575     0.498643    NaN    NaN      9    val\n",
       "20  0.060609  0.919182     0.497795    NaN    NaN     10  train\n",
       "21  0.364747  0.655699     0.498982    NaN    NaN     10    val\n",
       "22  0.043338  0.945132     0.499576    NaN    NaN     11  train\n",
       "23  0.450490  0.657734     0.498643    NaN    NaN     11    val\n",
       "24  0.034172  0.956835     0.499491    NaN    NaN     12  train\n",
       "25  0.422812  0.684871     0.497286    NaN    NaN     12    val\n",
       "26  0.027798  0.966418     0.499746    NaN    NaN     13  train\n",
       "27  0.509665  0.677408     0.498304    NaN    NaN     13    val\n",
       "28  0.023128  0.972778     0.499406    NaN    NaN     14  train\n",
       "29  0.516652  0.676391     0.496947    NaN    NaN     14    val\n",
       "30  0.020629  0.978375     0.499322    NaN    NaN     15  train\n",
       "31  0.546056  0.684532     0.496608    NaN    NaN     15    val\n",
       "32  0.014195  0.982446     0.499915    NaN    NaN     16  train\n",
       "33  0.530440  0.692673     0.495590    NaN    NaN     16    val\n",
       "34  0.010446  0.987449     0.499830    NaN    NaN     17  train\n",
       "35  0.600144  0.690638     0.493894    NaN    NaN     17    val\n",
       "36  0.011017  0.986007     0.499746    NaN    NaN     18  train\n",
       "37  0.696427  0.664179     0.495929    NaN    NaN     18    val\n",
       "38  0.008314  0.990078     0.499661    NaN    NaN     19  train\n",
       "39  0.714979  0.662822     0.497286    NaN    NaN     19    val"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
