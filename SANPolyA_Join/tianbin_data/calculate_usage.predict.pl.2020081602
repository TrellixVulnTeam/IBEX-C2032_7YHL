#!/usr/bin/perl -w
#
#
#


my ($data,$inp,$out,$ENS,$refSeq) = @ARGV;
my $extend = 2000;


my %compare;
my %utr;
my %gene_start;
my %gene_end;
my %biotype;
$biotype{"Intergenic"} = "Intergenic";


open ENS,"zcat $ENS | ";
while(<ENS>){
	next if $_ =~ /^\#/;
	my ($chr,$source,$type,$start,$end,$srd) = (split)[0,1,2,3,4,6];
	$chr = "chr$chr";
	if($type eq "gene"){
		my ($gene_name,$gene_type) = (split)[13,17];
		$gene_name =~ s/\"|\;//g;
		$gene_type =~ s/\"|\;//g;
		$gene_start{"$chr:$srd"}->{$gene_name} = $start;
		$gene_end{"$chr:$srd"}->{$gene_name} = $end;
		$biotype{$gene_name} = $gene_type;
	}
	elsif($type eq "exon"){
		my ($gene_name) = (split)[19];
		$gene_name =~ s/\"|\;//g;
		if($srd eq "+"){
			if(!exists $compare{$gene_name}){
				$compare{$gene_name} = $end;
				$utr{$gene_name} = "$start-$end";
			}
			elsif($compare{$gene_name} < $end){
				$compare{$gene_name} = $end;
				$utr{$gene_name} = "$start-$end";
			}
		}
		else{
			if(!exists $compare{$gene_name}){
				$compare{$gene_name} = $start;
				$utr{$gene_name} = "$start-$end";
			}
			elsif($compare{$gene_name} > $start){
				$compare{$gene_name} = $start;
				$utr{$gene_name} = "$start-$end";
			}
		}
	}
}



open REFSEQ,"zcat $refSeq | ";
while(<REFSEQ>){
	next if $_ =~ /^\#/;
	my ($chr,$source,$type,$start,$end,$srd,$gene_name) = (split)[0,1,2,3,4,6,9];
	$gene_name =~ s/\"|\;//g;
	if($type eq "transcript"){
		if(exists $gene_start{"$chr:$srd"}->{$gene_name}){
			if($gene_start{"$chr:$srd"}->{$gene_name} <= $start){
				next;
			}
			if($gene_end{"$chr:$srd"}->{$gene_name} >= $end){
				next;
			}
		}
		$gene_start{"$chr:$srd"}->{$gene_name} = $start;
		$gene_end{"$chr:$srd"}->{$gene_name} = $end;
		#my ($gene_type) = (split /gene_biotype/)[1];
		#(undef,$gene_type)  = split /\"/,$gene_type;
		#$biotype{$gene_name} = $gene_type;
		#if($gene_type eq "pseudogene"){
		#	$utr{$gene_name} = "$start-$end";
		#}
	}
	elsif($type eq "exon"){
		if($srd eq "+"){
			if(!exists $compare{$gene_name}){
				$compare{$gene_name} = $end;
				$utr{$gene_name} = "$start-$end";
			}
			elsif($compare{$gene_name} < $end){
				$compare{$gene_name} = $end;
				$utr{$gene_name} = "$start-$end";
			}
		}
		else{
			if(!exists $compare{$gene_name}){
				$compare{$gene_name} = $start;
				$utr{$gene_name} = "$start-$end";
			}
			elsif($compare{$gene_name} > $start){
				$compare{$gene_name} = $start;
				$utr{$gene_name} = "$start-$end";
			}
		}
	}
}


my %pas_gene;
my %pas_type;
open FILE,"$data";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$pos,$strand,$symbol) = split;
	$pas_type = "NA";
	$symbol = "Intergenic";
	my $val = $gene_start{"$chr:$strand"};
	foreach my $gene_name (keys %$val){
		my $start = $val->{$gene_name};
		my $end = $gene_end{"$chr:$strand"}->{$gene_name};
		if($strand eq "+"){
			$end += $extend;
		}
		else{
			$start -= $extend;
		}
		if($start < $pos && $end > $pos){
			$symbol = $gene_name;
			my ($utr_start,$utr_end) = split /\-/,$utr{$gene_name};
			if($strand eq "+"){
				$utr_end += $extend;
			}
			else{
				$utr_start -= $extend;
			}
			if($utr_start < $pos && $utr_end > $pos){
				$pas_type = "tandemUTR";
			}
			else{
				$pas_type = "Non_tandemUTR";
			}
			last;
		}
	}
	$pas_type{"$chr:$pos:$strand"} = "$pas_type\t$chr\t$pos\t$strand\t$symbol";
	$pas_gene{"$chr:$pos:$strand"} = "$symbol";
}

open FILE,"$inp";
<FILE>;
my %total;
while(<FILE>){
	chomp;
	my ($pas_id,$chr,$pre,$end,$pos,$strand,$rep1,$rep2) = split;
	my $ave = ($rep1+$rep2)/2;
	my $gene_name = $pas_gene{"$chr:$pos:$strand"};
	$total{$gene_name} += $ave;
}

my %filter;
open FILE,"$data";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$pos,$strand,$symbol) = split;
	my @data = split;
	my $before = &TrimmedMean(@data[8..108]);
	my $after = &TrimmedMean(@data[109..$#data]);
	my $diff = $before-$after;
	my $ave = ($before+$after)/2;
	my $ave_diff = $diff/$ave;
	$filter{"$chr:$pos:$strand"} = "$pas_type\t$ave_diff";
}


open FILE,"$inp";
<FILE>;
open OUT,">$out";
print OUT "pas_id\tpas_type\tchr\tposition\tstrand\tsymbol\tusage\treadCount\tmotif\tave_diff\tbiotype\n";
while(<FILE>){
	chomp;
	my ($pas_id,$chr,$pos,$strand,$rep1,$rep2) = (split)[0,1,4,5,6,7];
	my $ave = ($rep1+$rep2)/2;
	my $gene_name = $pas_gene{"$chr:$pos:$strand"};
	my $usage = $total{$gene_name}>0 ? $ave/$total{$gene_name} : 0;;
	if(exists $filter{"$chr:$pos:$strand"}){
		my $motif = $filter{"$chr:$pos:$strand"};
		my $pas_info = $pas_type{"$chr:$pos:$strand"};
		$biotype{$gene_name} = "Unknown" if !exists $biotype{$gene_name};
		print OUT "$pas_id\t$pas_info\t$usage\t$ave\t$motif\t$biotype{$gene_name}\n";
	}
}

sub TrimmedMean{
	my @data = @_;
	my $sum = 0;
	my $count = 0;
	foreach my $ele (@data){
		if($ele>0){
			$sum += $ele;
			$count++;
		}
	}
	my $ave = $count>0 ? $sum/$count : 0;
	return $ave;
}
