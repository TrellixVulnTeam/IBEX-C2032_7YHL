#!/bin/bash
#SBATCH --job-name=TEST_Join
#SBATCH --partition=batch
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mail-user=yongkang.long@kaust.edu.sa
#SBATCH --mail-type=END
#SBATCH --output=LOG/log.%J
#SBATCH --time=3:00:00
#SBATCH --mem=50G
#SBATCH -a 0-5
#SBATCH --gres=gpu:1

#source activate ML
echo "This is job #${SLURM_ARRAY_JOB_ID}, task id ${SLURM_ARRAY_TASK_ID}"
allsteps=(1 1 1 1 1 1)
allstrands=("str2" "str1" "str2" "str1" "str2" "str1")
allsigns=("+" "-" "+" "-" "+" "-")
allreps=("REP1" "REP1")
#allchrs=("chr1" "chr5" "chr9" "chr11" "chr7" "chr2")
allchrs=("chr2" "chr11" "chr7")
for ((i=0;i<=119;i++))
do
	b=$(( $i % 2 ))
	c=$(( $i / 2))
	steps[$i]=${allsteps[$b]}
	strands[$i]=${allstrands[$b]}
	signs[$i]=${allsigns[$b]}
	reps[$i]=${allreps[$b]}
	chrs[$i]=${allchrs[$c]}
done

window=176
step=${steps[$SLURM_ARRAY_TASK_ID]}
strand=${strands[$SLURM_ARRAY_TASK_ID]}
sign=${signs[$SLURM_ARRAY_TASK_ID]}
rep=${reps[$SLURM_ARRAY_TASK_ID]}
chr=${chrs[$SLURM_ARRAY_TASK_ID]}

PAS="../SANPolyA_Join/usage_data/bl6.pAs.zhangbin.usage.txt"
DB="../SANPolyA_Join/usage_data/bl6.pAs.tianbin.usage.test.v3.txt"
USAGE="../SANPolyA_Join/usage_data/bl6.pAs.tianbin.usage.test.v3.txt"
scanGenome="../SANPolyA_Join/scanGenome_data/bl6.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.UpstreamTrimmed10.txt.test.txt"

####No need
#perl extract_coverage_from_scanGenome.pl $USAGE $scanGenome
#perl select_negative_from_scanGenome.pl $USAGE $scanGenome $chr $sign


####Validation
round=4
bestEpoch=0016
Testid="bl6.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.UpstreamTrimmed10.txt.test.txt.thrround${round}"
#python3 evaluate.py --model Model/bl6.pAs.REP1.thrround${round}-${bestEpoch}.ckpt --data $scanGenome --out predict/$Testid.txt


input="predict/${Testid}.txt"

####正向
echo $input
maxPoint=10
penality=1
#perl scanGenome.maximum_sum4.chr.pl 0 $penality $input
####反向
#perl scanGenome.maximum_sum4.reverse.chr.pl 0 $penality $input
#####正反向
#perl postprocess.bidirection.pl $maxPoint $penality $chr $sign $USAGE $PAS  $DB $input

####合并
#perl merge_postpropose.pl

input="maxSum/${Testid}.txt.bidirection.$maxPoint.$penality.txt"

out1="data/bl6.pAs.predict.REP1.thrround${round}.txt.test.txt.${chr}.${sign}.txt"
out2="data/bl6.pAs.falsePos_zb.REP1.thrround${round}.txt.${chr}.${sign}.txt"
out3="data/bl6.pAs.falsePos_db.REP1.thrround${round}.txt.${chr}.${sign}.txt"
#perl change_all.pl $chr $sign $input $out1 $out2 $out3 $scanGenome "round$round"
