#!/bin/bash
#SBATCH --job-name=POS_new
#SBATCH --partition=batch
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mail-user=yongkang.long@kaust.edu.sa
#SBATCH --mail-type=END
#SBATCH --output=log.%J
#SBATCH --time=1:00:00
#SBATCH --mem=140G
#SBATCH -a 0-39

#####SBATCH --gres=gpu:1

#source activate ML
echo "This is job #${SLURM_ARRAY_JOB_ID}, task id ${SLURM_ARRAY_TASK_ID}"
allsteps=(1 1 1 1 1 1)
allstrands=("str2" "str1" "str2" "str1" "str2" "str1")
allsigns=("+" "-" "+" "-" "+" "-")
allreps=("REP1" "REP1")
allchrs=("chr1" "chr2" "chr3" "chr4" "chr5" "chr6" "chr7" "chr8" "chr9" "chr10" "chr11" "chr12" "chr13" "chr14" "chr15" "chr16" "chr17" "chr18"  "chr19" "chrX")  
#allchrs=("chr1" "chr5" "chr9" "chr11" "chr7" "chr2")
for ((i=0;i<=119;i++))
do
	b=$(( $i % 2 ))
	c=$(( $i / 2))
	steps[$i]=${allsteps[$b]}
	strands[$i]=${allstrands[$b]}
	signs[$i]=${allsigns[$b]}
	reps[$i]=${allreps[$b]}
	chrs[$i]=${allchrs[$c]}
done

window=176
step=${steps[$SLURM_ARRAY_TASK_ID]}
strand=${strands[$SLURM_ARRAY_TASK_ID]}
sign=${signs[$SLURM_ARRAY_TASK_ID]}
rep=${reps[$SLURM_ARRAY_TASK_ID]}
chr=${chrs[$SLURM_ARRAY_TASK_ID]}


####Validation
round=0
USAGE="data/bl6.pAs.positive.REP1.newround0.txt"
scanGenome="scanGenome_data/bl6.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt"
Testid="bl6.pAs.scanGenome.step${step}.${strand}.${rep}.${chr}.Trimmed10.txt.newround${round}"
python3 evaluate.py --h5File Model/bl6.pAs.REP1.newround0-0040.cpkt --data test.txt


input="predict/${Testid}.txt"

####正向
echo $input
maxPoint=12
penality=1
#perl scanGenome.maximum_sum4.chr.pl $maxPoint $penality $input
####反向
#perl scanGenome.maximum_sum4.reverse.chr.pl $maxPoint $penality $input
#####正反向
#perl postprocess.bidirection.pl $maxPoint $penality $chr $sign $USAGE $PAS $ENS $DB $input

####合并
#perl merge_postpropose.pl

input="maxSum/${Testid}.txt.bidirection.$maxPoint.$penality.txt"
negative="train_data/bl6.pAs.negative.REP1.newround${round}.txt"
((round=$round+1))
out="train_data/bl6.pAs.negative.REP1.newround${round}.txt.${chr}.${sign}.txt"
out2="train_data/bl6.pAs.predictFalsePositive.REP1.newround${round}.txt.${chr}.${sign}.txt"
#perl change_negative2.pl $chr $sign $input $negative $out $out2 $scanGenome "round$round"

out1="train_data/bl6.pAs.predictAll.REP1.newround${round}.txt.${chr}.${sign}.txt"
out2="train_data/bl6.pAs.falsePos_zb.REP1.newround${round}.txt.${chr}.${sign}.txt"
out3="train_data/bl6.pAs.falsePos_db.REP1.newround${round}.txt.${chr}.${sign}.txt"
#perl change_all.pl $chr $sign $input $negative $out1 $out2 $out3 $scanGenome "round$round"
