#!/usr/bin/perl -w

use Statistics::Descriptive;
my ($maxLength,$penality,$CHR,$SRD,$USAGE,$PAS,$ENS,$DB,$input) = @ARGV;
my $INP = $input;
$INP =~ s/predict/maxSum/;
$INP .= ".left.$maxLength.$penality.txt";
my $OUT = $input;
$OUT =~ s/predict/maxSum/;
$OUT .= ".middle.$maxLength.$penality.txt";

my $STAT = $input;
$STAT =~ s/predict/Stat/;
$STAT .= ".middle.$maxLength.$penality.txt";

open STAT,">$STAT";

my %pas_pos;
open FILE,"$INP";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$maxPoint,$maxPos,$start,$end) = split;
	next if $maxPoint < $maxLength;
	my $pos = ($start+$maxPos)/2;
	$pas_pos{$pos} = "";
}


my %nearest;
my %nearReal;
my $ground_truth = 0 ;
open FILE,"$USAGE";
<FILE>;
my $previous = 0;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$end,$srd) = split;
	my ($gene_id) = split /\./,$pas_id;
	next if $srd ne $SRD;
	next if $chr ne $CHR;
	if($end-$previous>25){
		$ground_truth++;
	}
	$previous = $end;
	while(my($pos,$pas_id) = each %pas_pos){
		if(exists $nearest{$pos}){
			if( abs($pos-$end)<abs($nearest{$pos})){
				$nearest{$pos} = $pos-$end;
				$nearReal{$pos} = $pas_id
			}
		}
		else{
			$nearest{$pos} = $pos-$end;
			$nearReal{$pos} = $pas_id;
		}
	}
}
my $RealNum25 = 0;
my $RealNum50 = 0;
my $RealNum100 = 0;
while(my($pas_id,$diff) = each %nearest){
	if(abs($diff)<100){
		$RealNum100++;
		if(abs($diff)<50){
			$RealNum50++;
			if(abs($diff)<25){
				$RealNum25++;
			}
		}
	}
}
$recall25 = $RealNum25/$ground_truth;
$recall50 = $RealNum50/$ground_truth;
$recall100 = $RealNum100/$ground_truth;
print STAT "ground truth in $CHR, $RealNum25\t$RealNum50\t$RealNum100\t$ground_truth\n";
print STAT "recall: $recall25\t$recall50\t$recall100\n";


open ENS,"awk '(\$3 == \"three_prime_utr\")' $ENS |" ;
while(<ENS>){
	chomp;
	my ($chr,$source,$type,$start,$end,undef,$srd,undef,undef,$gene_id) = split;
	$gene_id =~ s/\"|\;//g;
	next if $srd ne $SRD;
	next if $chr ne $CHR;
	while(my($pos,$val) = each %pas_pos){
		if( abs($pos-$end)<abs($nearest{$pos})){
			$nearest{$pos} = $pos-$end;
			$nearReal{$pos} = $gene_id
		}
	}
}
open FILE,"$DB";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$end,$srd) = split;
	next if $srd ne $SRD;
	next if $chr ne $CHR;
	my ($gene_id) = split /\./,$pas_id;
	while(my($pos,$val) = each %pas_pos){
		if( abs($pos-$end)<abs($nearest{$pos})){
			$nearest{$pos} = $pos-$end;
			$nearReal{$pos} = $pas_id
		}
	}
}

open FILE,"$PAS";
<FILE>;
while(<FILE>){
	chomp;
	my ($pas_id,$pas_type,$chr,$end,$srd) = split;
	next if $srd ne $SRD;
	next if $chr ne $CHR;
	my ($gene_id) = split /\./,$pas_id;
	while(my($pos,$val) = each %pas_pos){
		if( abs($pos-$end)<abs($nearest{$pos})){
			$nearest{$pos} = $pos-$end;
			$nearReal{$pos} = $pas_id
		}
	}
}


my $precis25 = 0;
my $precis50 = 0;
my $precis100 = 0;

open OUT,">$OUT";
print OUT "pas_id\trealPasPos\tdiff\n";
my @stat;
while(my ($key,$val) = each %nearReal){
	my $diff = $nearest{$key};
	print OUT "$key\t$val\t$diff\n";
	if(abs($diff)<100){
		$precis100++;
		#push @stat,$diff;
		if(abs($diff)<50){
			#push @stat,$diff;
			$precis50++;
			if(abs($diff)<25){
				push @stat,$diff;
				$precis25++;
			}
		}
	}
}

my $total = keys %pas_pos;
my $percent25 = $precis25/$total;
my $percent50 = $precis50/$total;
my $percent100 = $precis100/$total;
print STAT "precis: $precis25\t$precis50\t$precis100\t$total\n";
print STAT "precision: $percent25\t$percent50\t$percent100\n";

my $stat = Statistics::Descriptive::Full->new();
$stat->add_data(@stat);
my $mean = $stat->mean();#平均值
my $variance = $stat->variance();#方差
my $num = $stat->count();#data的数目
my $standard_deviation=$stat->standard_deviation();#标准差
my $sum=$stat->sum();#求和
my $min=$stat->min();#最小值
my $mindex=$stat->mindex();#最小值的index
my $max=$stat->max();#最大值
my $maxdex=$stat->maxdex();#最大值的index
my $range=$stat->sample_range();#最小值到最大值
my $median=$stat->median();

print STAT "Header\tRecall\tFPR\tMean\tMedian\tSTD\tRange\n";
print STAT "$penality,$maxLength\t$recall25\t$percent25\t$mean\t$median\t$standard_deviation\t$min,$max\n";
