{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import glob\n",
    "from collections import OrderedDict,defaultdict\n",
    "import pipes\n",
    "import pprint\n",
    "import tempfile\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "file = 'scanGenome_data/bl6.pAs.scanGenome.step1.str1.REP1.chr19.UpstreamTrimmed10.txt'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "root_dir = 'BL6_data'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "####Fixed length 1e6 = 100 blocks. \n",
    "####Fixed length 5e5 = 200 blocks. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "#!genome-build GRCm38.p6\n",
      "#!genome-version GRCm38\n",
      "#!genome-date 2012-01\n",
      "#!genome-build-accession NCBI:GCA_000001635.8\n",
      "#!genebuild-last-updated 2020-02\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from subprocess import Popen, PIPE\n",
    "\n",
    "cmd = 'zcat /home/longy/cnda/ensembl/Mus_musculus.GRCm38.101.gtf.gz | head -5'\n",
    "proc = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n",
    "outs, errs = proc.communicate(input=\"\"\"\n",
    "        Popen.communicate(input=None, timeout=None)\n",
    "        Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. Wait for process to terminate. The optional input argument should be data to be sent to the child process, or None, if no data should be sent to the child. The type of input must be bytes or, if universal_newlines was True, a string.\n",
    "        communicate() returns a tuple (stdout_data, stderr_data).\n",
    "        Note that if you want to send data to the processâ€™s stdin, you need to create the Popen object with stdin=PIPE. Similarly, to get anything other than None in the result tuple, you need to give stdout=PIPE and/or stderr=PIPE too.\n",
    "        If the process does not terminate after timeout seconds, a TimeoutExpired exception will be raised. Catching this exception and retrying communication will not lose any output.\n",
    "        The child process is not killed if the timeout expires, so in order to cleanup properly a well-behaved application should kill the child process and finish communication:\n",
    "    \"\"\".encode('UTF-8'))\n",
    "print(outs.decode('UTF-8'))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def binary_locate(array,ele,start,end):\n",
    "    middle = (end+start)//2\n",
    "    if(end-start>1):\n",
    "        if(array[middle]<ele):\n",
    "            return binary_locate(array,ele,middle,end)\n",
    "        elif(array[middle+1]>ele):\n",
    "            return binary_locate(array,ele,start,middle)\n",
    "        else:\n",
    "            return middle,middle+1\n",
    "    else:\n",
    "        return middle,middle+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "p = pipes.Template()\n",
    "p.append(\"zcat\", '--')\n",
    "Gene_Loc = defaultdict(list)\n",
    "f = p.open('/home/longy/cnda/ensembl/Mus_musculus.GRCm38.101.gtf.gz', 'r')\n",
    "\n",
    "for line in f.readlines():\n",
    "    if re.match('^#',line):\n",
    "        continue\n",
    "    line = line.rstrip('\\n')\n",
    "    data = line.split('\\t')\n",
    "    if(data[2] == 'gene'):\n",
    "        Gene_Loc['chr'+data[0]+data[6]].append(int(data[3]))\n",
    "        Gene_Loc['chr'+data[0]+data[6]].append(int(data[4]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(678, 679)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import sys\n",
    "sys.setrecursionlimit(10000)\n",
    "array = Gene_Loc['chr1+']\n",
    "binary_locate(array,46104790,0,3505)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "writing file BL6_data/Blocks/chr13_+_0_3298870-49736923\n",
      "writing file BL6_data/Blocks/chr13_+_1_49738226-80896088\n",
      "writing file BL6_data/Blocks/chr13_+_2_81064654-120259287\n",
      "writing file BL6_data/Blocks/chr4_+_0_3574923-41482371\n",
      "writing file BL6_data/Blocks/chr4_+_1_41717529-59041975\n",
      "writing file BL6_data/Blocks/chr4_+_2_59045620-107359900\n",
      "writing file BL6_data/Blocks/chr4_+_3_107367939-124746270\n",
      "writing file BL6_data/Blocks/chr4_+_4_124751308-134164480\n",
      "writing file BL6_data/Blocks/chr4_+_5_134291254-147515827\n",
      "writing file BL6_data/Blocks/chr4_+_6_147868919-156250329\n",
      "writing file BL6_data/Blocks/chr14_-_0_3051909-46885192\n",
      "writing file BL6_data/Blocks/chr14_-_1_47061508-67591858\n",
      "writing file BL6_data/Blocks/chr14_-_2_67673145-123985630\n",
      "writing file BL6_data/Blocks/chr11_-_0_3122744-22801472\n",
      "writing file BL6_data/Blocks/chr11_-_1_22802497-52236940\n",
      "writing file BL6_data/Blocks/chr11_-_2_52242495-62698855\n",
      "writing file BL6_data/Blocks/chr11_-_3_62700379-76045169\n",
      "writing file BL6_data/Blocks/chr11_-_4_76046225-86603304\n",
      "writing file BL6_data/Blocks/chr11_-_5_86604357-98100113\n",
      "writing file BL6_data/Blocks/chr11_-_6_98101613-103882948\n",
      "writing file BL6_data/Blocks/chr11_-_7_103910351-116469490\n",
      "writing file BL6_data/Blocks/chr11_-_8_116470698-121673079\n",
      "writing file BL6_data/Blocks/chr4_-_0_3549193-43563565\n",
      "writing file BL6_data/Blocks/chr4_-_1_43565169-81349280\n",
      "writing file BL6_data/Blocks/chr4_-_2_81356242-118213871\n",
      "writing file BL6_data/Blocks/chr4_-_3_118217004-132348100\n",
      "writing file BL6_data/Blocks/chr4_-_4_132351527-143142227\n",
      "writing file BL6_data/Blocks/chr4_-_5_143145352-156246995\n",
      "writing file BL6_data/Blocks/chrX_+_0_4136294-68549438\n",
      "writing file BL6_data/Blocks/chrX_+_1_68678637-108975761\n",
      "writing file BL6_data/Blocks/chrX_+_2_108977777-170673550\n",
      "writing file BL6_data/Blocks/chr8_-_0_3143318-33659170\n",
      "writing file BL6_data/Blocks/chr8_-_1_33700716-70678304\n",
      "writing file BL6_data/Blocks/chr8_-_2_70695223-95307685\n",
      "writing file BL6_data/Blocks/chr8_-_3_95323045-115707807\n",
      "writing file BL6_data/Blocks/chr8_-_4_116568664-129234348\n",
      "writing file BL6_data/Blocks/chr8_+_0_3393050-25577800\n",
      "writing file BL6_data/Blocks/chr8_+_1_25601694-70183690\n",
      "writing file BL6_data/Blocks/chr8_+_2_70234355-84093387\n",
      "writing file BL6_data/Blocks/chr8_+_3_84094732-105335507\n",
      "writing file BL6_data/Blocks/chr8_+_4_105348321-119446321\n",
      "writing file BL6_data/Blocks/chr8_+_5_119521199-129294184\n",
      "writing file BL6_data/Blocks/chrX_-_0_5700265-60404435\n",
      "writing file BL6_data/Blocks/chrX_-_1_60576503-104348391\n",
      "writing file BL6_data/Blocks/chrX_-_2_104413565-170673449\n",
      "writing file BL6_data/Blocks/chr13_-_0_3137385-46378778\n",
      "writing file BL6_data/Blocks/chr13_-_1_46676689-67071498\n",
      "writing file BL6_data/Blocks/chr13_-_2_67073994-98987617\n",
      "writing file BL6_data/Blocks/chr13_-_3_98988821-120304532\n",
      "writing file BL6_data/Blocks/chr1_+_0_4771293-44003181\n",
      "writing file BL6_data/Blocks/chr1_+_1_44005579-74268294\n",
      "writing file BL6_data/Blocks/chr1_+_2_74277379-93510322\n",
      "writing file BL6_data/Blocks/chr1_+_3_93512150-136178062\n",
      "writing file BL6_data/Blocks/chr1_+_4_136269522-172424247\n",
      "writing file BL6_data/Blocks/chr1_+_5_172426988-195114808\n",
      "writing file BL6_data/Blocks/chr3_-_0_4891036-66221280\n",
      "writing file BL6_data/Blocks/chr3_-_1_66225107-95495830\n",
      "writing file BL6_data/Blocks/chr3_-_2_95628566-116662599\n",
      "writing file BL6_data/Blocks/chr3_-_3_116669486-159907175\n",
      "writing file BL6_data/Blocks/chr19_+_0_3205782-9077809\n",
      "writing file BL6_data/Blocks/chr19_+_1_9216338-40917978\n",
      "writing file BL6_data/Blocks/chr19_+_2_41213948-61168765\n",
      "writing file BL6_data/Blocks/chr5_+_0_3236383-31081561\n",
      "writing file BL6_data/Blocks/chr5_+_1_31179895-52824702\n",
      "writing file BL6_data/Blocks/chr5_+_2_52834075-93183211\n",
      "writing file BL6_data/Blocks/chr5_+_3_93195969-114460661\n",
      "writing file BL6_data/Blocks/chr5_+_4_114463336-124550711\n",
      "writing file BL6_data/Blocks/chr5_+_5_124552904-139364129\n",
      "writing file BL6_data/Blocks/chr5_+_6_139393097-151322151\n",
      "writing file BL6_data/Blocks/chr19_-_0_3206565-6045422\n",
      "writing file BL6_data/Blocks/chr19_-_1_6046465-24174097\n",
      "writing file BL6_data/Blocks/chr19_-_2_24185773-43662350\n",
      "writing file BL6_data/Blocks/chr19_-_3_43663740-61305206\n",
      "writing file BL6_data/Blocks/chr12_-_0_3233263-69361210\n",
      "writing file BL6_data/Blocks/chr12_-_1_69367829-85374782\n",
      "writing file BL6_data/Blocks/chr12_-_2_85440730-119876462\n",
      "writing file BL6_data/Blocks/chr15_+_0_3271034-41099603\n",
      "writing file BL6_data/Blocks/chr15_+_1_41101125-78853779\n",
      "writing file BL6_data/Blocks/chr15_+_2_78855582-89100414\n",
      "writing file BL6_data/Blocks/chr15_+_3_89129014-103828572\n",
      "writing file BL6_data/Blocks/chr7_+_0_3181106-24538677\n",
      "writing file BL6_data/Blocks/chr7_+_1_24547231-43444545\n",
      "writing file BL6_data/Blocks/chr7_+_2_43446292-68233755\n",
      "writing file BL6_data/Blocks/chr7_+_3_68304661-99482644\n",
      "writing file BL6_data/Blocks/chr7_+_4_99582269-118774138\n",
      "writing file BL6_data/Blocks/chr7_+_5_118775285-128692466\n",
      "writing file BL6_data/Blocks/chr7_+_6_128693639-145309530\n",
      "writing file BL6_data/Blocks/chr10_-_0_3268306-41529491\n",
      "writing file BL6_data/Blocks/chr10_-_1_41718819-77249325\n",
      "writing file BL6_data/Blocks/chr10_-_2_77251476-85386402\n",
      "writing file BL6_data/Blocks/chr10_-_3_85874407-120476953\n",
      "writing file BL6_data/Blocks/chr10_-_4_120610558-130592799\n",
      "writing file BL6_data/Blocks/chr15_-_0_3217247-44429643\n",
      "writing file BL6_data/Blocks/chr15_-_1_44432346-76216663\n",
      "writing file BL6_data/Blocks/chr15_-_2_76217816-82348875\n",
      "writing file BL6_data/Blocks/chr15_-_3_82350052-98731510\n",
      "writing file BL6_data/Blocks/chr15_-_4_98732828-103899699\n",
      "writing file BL6_data/Blocks/chr10_+_0_3740501-41532298\n",
      "writing file BL6_data/Blocks/chr10_+_1_41810343-76557204\n",
      "writing file BL6_data/Blocks/chr10_+_2_76596870-82897800\n",
      "writing file BL6_data/Blocks/chr10_+_3_82954812-111499116\n",
      "writing file BL6_data/Blocks/chr10_+_4_111500318-130577703\n",
      "writing file BL6_data/Blocks/chr14_+_0_4111088-25700517\n",
      "writing file BL6_data/Blocks/chr14_+_1_25712138-49194523\n",
      "writing file BL6_data/Blocks/chr14_+_2_49984477-69695922\n",
      "writing file BL6_data/Blocks/chr14_+_3_69704104-123975699\n",
      "writing file BL6_data/Blocks/chr12_+_0_3235568-30017740\n",
      "writing file BL6_data/Blocks/chr12_+_1_30584453-73354122\n",
      "writing file BL6_data/Blocks/chr12_+_2_73361488-85644265\n",
      "writing file BL6_data/Blocks/chr12_+_3_85824814-109661687\n",
      "writing file BL6_data/Blocks/chr12_+_4_109666142-119466947\n",
      "writing file BL6_data/Blocks/chr6_+_0_3200761-34787441\n",
      "writing file BL6_data/Blocks/chr6_+_1_34793912-59212083\n",
      "writing file BL6_data/Blocks/chr6_+_2_59238020-86392433\n",
      "writing file BL6_data/Blocks/chr6_+_3_86404297-113153480\n",
      "writing file BL6_data/Blocks/chr6_+_4_113237872-128377755\n",
      "writing file BL6_data/Blocks/chr6_+_5_128384153-149582189\n",
      "writing file BL6_data/Blocks/chr5_-_0_3564303-31607785\n",
      "writing file BL6_data/Blocks/chr5_-_1_31609523-65675781\n",
      "writing file BL6_data/Blocks/chr5_-_2_65678540-104460307\n",
      "writing file BL6_data/Blocks/chr5_-_3_104483080-120556583\n",
      "writing file BL6_data/Blocks/chr5_-_4_120557678-129878859\n",
      "writing file BL6_data/Blocks/chr5_-_5_129881067-140749600\n",
      "writing file BL6_data/Blocks/chr5_-_6_140758325-151651199\n",
      "writing file BL6_data/Blocks/chr17_-_0_3043842-25184107\n",
      "writing file BL6_data/Blocks/chr17_-_1_25233406-32957808\n",
      "writing file BL6_data/Blocks/chr17_-_2_33016832-46733724\n",
      "writing file BL6_data/Blocks/chr17_-_3_46735252-71371329\n",
      "writing file BL6_data/Blocks/chr17_-_4_71376922-94834765\n",
      "writing file BL6_data/Blocks/chr7_-_0_3108888-25219802\n",
      "writing file BL6_data/Blocks/chr7_-_1_25228179-31762254\n",
      "writing file BL6_data/Blocks/chr7_-_2_32491205-47035465\n",
      "writing file BL6_data/Blocks/chr7_-_3_48124099-80935143\n",
      "writing file BL6_data/Blocks/chr7_-_4_80936593-101061485\n",
      "writing file BL6_data/Blocks/chr7_-_5_101154593-122079194\n",
      "writing file BL6_data/Blocks/chr7_-_6_122085418-134213747\n",
      "writing file BL6_data/Blocks/chr7_-_7_134215697-145283915\n",
      "writing file BL6_data/Blocks/chr9_-_0_3258705-25252255\n",
      "writing file BL6_data/Blocks/chr9_-_1_25277513-49799001\n",
      "writing file BL6_data/Blocks/chr9_-_2_50344136-64178471\n",
      "writing file BL6_data/Blocks/chr9_-_3_64185449-90223554\n",
      "writing file BL6_data/Blocks/chr9_-_4_90225929-108689144\n",
      "writing file BL6_data/Blocks/chr9_-_5_108691647-124476936\n",
      "writing file BL6_data/Blocks/chr2_+_0_3118480-28058349\n",
      "writing file BL6_data/Blocks/chr2_+_1_28059749-32569826\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "writing file BL6_data/Blocks/chr2_+_2_32570860-71264059\n",
      "writing file BL6_data/Blocks/chr2_+_3_71389253-112247127\n",
      "writing file BL6_data/Blocks/chr2_+_4_112261944-128854281\n",
      "writing file BL6_data/Blocks/chr2_+_5_128896532-153272699\n",
      "writing file BL6_data/Blocks/chr2_+_6_153291441-166898081\n",
      "writing file BL6_data/Blocks/chr2_+_7_166906066-181917827\n",
      "writing file BL6_data/Blocks/chr9_+_0_3335518-35030935\n",
      "writing file BL6_data/Blocks/chr9_+_1_35032067-56903147\n",
      "writing file BL6_data/Blocks/chr9_+_2_56937483-67997805\n",
      "writing file BL6_data/Blocks/chr9_+_3_68663864-96030956\n",
      "writing file BL6_data/Blocks/chr9_+_4_96032025-109844983\n",
      "writing file BL6_data/Blocks/chr9_+_5_109875634-124424529\n",
      "writing file BL6_data/Blocks/chr17_+_0_3115061-17849677\n",
      "writing file BL6_data/Blocks/chr17_+_1_17851576-28301542\n",
      "writing file BL6_data/Blocks/chr17_+_2_28313564-36140735\n",
      "writing file BL6_data/Blocks/chr17_+_3_36158707-71659088\n",
      "writing file BL6_data/Blocks/chr17_+_4_71717346-94879642\n",
      "writing file BL6_data/Blocks/chr18_+_0_3371077-34336629\n",
      "writing file BL6_data/Blocks/chr18_+_1_34345430-60778631\n",
      "writing file BL6_data/Blocks/chr18_+_2_60803955-90592575\n",
      "writing file BL6_data/Blocks/chr6_-_0_3201356-39313180\n",
      "writing file BL6_data/Blocks/chr6_-_1_39314412-83004295\n",
      "writing file BL6_data/Blocks/chr6_-_2_83005349-99076050\n",
      "writing file BL6_data/Blocks/chr6_-_3_99096060-124935173\n",
      "writing file BL6_data/Blocks/chr6_-_4_124958206-149433771\n",
      "writing file BL6_data/Blocks/chr18_-_0_3256253-35805586\n",
      "writing file BL6_data/Blocks/chr18_-_1_35810395-62031385\n",
      "writing file BL6_data/Blocks/chr18_-_2_62177824-90312112\n",
      "writing file BL6_data/Blocks/chr11_+_0_3123989-23493545\n",
      "writing file BL6_data/Blocks/chr11_+_1_23609138-51977411\n",
      "writing file BL6_data/Blocks/chr11_+_2_51986360-60952885\n",
      "writing file BL6_data/Blocks/chr11_+_3_60956945-72451811\n",
      "writing file BL6_data/Blocks/chr11_+_4_72607289-78349221\n",
      "writing file BL6_data/Blocks/chr11_+_5_78364074-94126144\n",
      "writing file BL6_data/Blocks/chr11_+_6_94138546-101191637\n",
      "writing file BL6_data/Blocks/chr11_+_7_101247088-115968039\n",
      "writing file BL6_data/Blocks/chr11_+_8_115982877-121860085\n",
      "writing file BL6_data/Blocks/chr16_-_0_3625009-18877065\n",
      "writing file BL6_data/Blocks/chr16_-_1_20176786-51363889\n",
      "writing file BL6_data/Blocks/chr16_-_2_51980386-98082336\n",
      "writing file BL6_data/Blocks/chr1_-_0_4687899-44107879\n",
      "writing file BL6_data/Blocks/chr1_-_1_44109491-71660759\n",
      "writing file BL6_data/Blocks/chr1_-_2_71709206-93360819\n",
      "writing file BL6_data/Blocks/chr1_-_3_93364798-134803821\n",
      "writing file BL6_data/Blocks/chr1_-_4_134805170-156907785\n",
      "writing file BL6_data/Blocks/chr1_-_5_156939397-179958662\n",
      "writing file BL6_data/Blocks/chr1_-_6_180106121-195131566\n",
      "writing file BL6_data/Blocks/chr2_-_0_3175608-26948156\n",
      "writing file BL6_data/Blocks/chr2_-_1_26949391-52742184\n",
      "writing file BL6_data/Blocks/chr2_-_2_53134658-93912087\n",
      "writing file BL6_data/Blocks/chr2_-_3_93955803-121925729\n",
      "writing file BL6_data/Blocks/chr2_-_4_121933386-147010894\n",
      "writing file BL6_data/Blocks/chr2_-_5_148070883-164879695\n",
      "writing file BL6_data/Blocks/chr2_-_6_164882209-181864193\n",
      "writing file BL6_data/Blocks/chr16_+_0_3346666-17793452\n",
      "writing file BL6_data/Blocks/chr16_+_1_17797281-32429131\n",
      "writing file BL6_data/Blocks/chr16_+_2_32430944-45131623\n",
      "writing file BL6_data/Blocks/chr16_+_3_45137450-98039254\n",
      "writing file BL6_data/Blocks/chr3_+_0_3791961-51495985\n",
      "writing file BL6_data/Blocks/chr3_+_1_51561226-88362422\n",
      "writing file BL6_data/Blocks/chr3_+_2_88481226-96178004\n",
      "writing file BL6_data/Blocks/chr3_+_3_96179007-122020628\n",
      "writing file BL6_data/Blocks/chr3_+_4_122085600-159938737\n"
     ]
    }
   ],
   "source": [
    "total = 0\n",
    "files = glob.glob(root_dir+\"/*.txt\")\n",
    "info = open(root_dir+'/Blocks/info.txt','w')\n",
    "info.write('ID\\tstart\\tend\\tlength\\tsites_num\\n')\n",
    "for file in files:\n",
    "    num_lines = sum(1 for line in open(file))\n",
    "    num_blocks = round(num_lines/5e5)\n",
    "    len_blocks = num_lines/num_blocks\n",
    "    \n",
    "    f= open(file,'r')\n",
    "    pre_pos = 0\n",
    "    dict_line = OrderedDict()\n",
    "    #dict_line = dict()\n",
    "    count = 0\n",
    "    separate_num=0\n",
    "    save_block = 0\n",
    "    start = 0\n",
    "    \n",
    "    for i, line in enumerate(f):\n",
    "        line = line.rstrip('\\n')\n",
    "        if(i==0):\n",
    "            continue ###Skip header\n",
    "        chromosome,pos,strand = line.split('\\t')[0].split(':')\n",
    "        pos = int(pos)\n",
    "        count += 1\n",
    "        if(i==1):\n",
    "            start=pos\n",
    "        if(count>len_blocks and pos-pre_pos>1000 and save_block<num_blocks-1):\n",
    "            array = Gene_Loc[chromosome+strand]\n",
    "            index1,index2 = binary_locate(array,pre_pos,0,len(array)-1)\n",
    "            if(index1%2==1 and index2%2==0):\n",
    "                ww = open(root_dir+'/Blocks/%s_%s_%d'%(chromosome,strand,save_block),'w')\n",
    "                print('writing file '+root_dir+'/Blocks/%s_%s_%d_%d-%d'%(chromosome,strand,save_block,start,pre_pos))\n",
    "                info.write('%s_%s_%d\\t%d\\t%d\\t%d\\t%d\\n'%(chromosome,strand,save_block,start,pre_pos,pre_pos-start,count))\n",
    "                #print('%s_%s_%d\\t%d\\t%d\\t%d\\t%d\\n'%(chromosome,strand,save_block,start,pre_pos,pre_pos-start,count))\n",
    "                for key,val in dict_line.items():\n",
    "                    ww.write('%s\\n'%val)\n",
    "                ww.close()\n",
    "                dict_line.clear()\n",
    "                count = 0\n",
    "                save_block += 1\n",
    "                start  = pos\n",
    "            \n",
    "        \n",
    "        dict_line[pos] = line\n",
    "        pre_pos = pos\n",
    "        \n",
    "    out = open(root_dir+'/Blocks/%s_%s_%d'%(chromosome,strand,save_block),'w')\n",
    "    print('writing file '+root_dir+'/Blocks/%s_%s_%d_%d-%d'%(chromosome,strand,save_block,start,pre_pos))\n",
    "    info.write('%s_%s_%d\\t%d\\t%d\\t%d\\t%d\\n'%(chromosome,strand,save_block,start,pre_pos,pre_pos-start,count))\n",
    "    for key,val in dict_line.items():\n",
    "        out.write('%s\\n'%(val))\n",
    "    out.close()\n",
    "\n",
    "info.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(46066315, 46373550)"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "array[678],array[679]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
